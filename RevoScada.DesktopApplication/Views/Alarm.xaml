<UserControl
    x:Class="RevoScada.DesktopApplication.Views.Alarm"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:RevoScada.DesktopApplication.Converters"
    xmlns:ctrl="clr-namespace:RevoScada.DesktopApplication.Helpers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:local="clr-namespace:RevoScada.DesktopApplication.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="1080"
    d:DesignWidth="1920"
    Background="{StaticResource MainWindowLight}"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:AlarmConditionBasedFGColorConverter x:Key="AlarmConditionBasedFGColorConverter" />
        <converters:EventConditionBasedBGColorConverter x:Key="EventConditionBasedBGColorConverter" />
        <converters:EventConditionBasedFGColorConverter x:Key="EventConditionBasedFGColorConverter" />

        <Style TargetType="dx:SimpleButton">
            <Setter Property="Width" Value="130" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="15" />
        </Style>
        <Style x:Key="alarmDataGridTb" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Storyboard x:Key="alarmTypeIncomingAnim">
            <ColorAnimation
                AutoReverse="True"
                RepeatBehavior="0:0:3.4"
                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                To="#e53935"
                Duration="0:0:0.6" />
            <ColorAnimation
                BeginTime="0:0:3.75"
                Completed="SetAlarmWarnedState_Completed"
                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                To="#e53935"
                Duration="0:0:0.5" />
        </Storyboard>
    </UserControl.Resources>

    <Grid Margin="10,5,10,10" Loaded="Grid_Loaded">
        <Grid.RowDefinitions>
            <RowDefinition Height="48*" />
            <RowDefinition Height="48*" />
            <RowDefinition Height="4*" />
        </Grid.RowDefinitions>

        <!--#region Furnace Alarm Section-->
        <Grid Margin="10,0,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*" />
                <RowDefinition Height="92*" />
            </Grid.RowDefinitions>

            <!--  Furnace Alarms  -->
            <Viewbox
                MaxWidth="160"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">
                <TextBlock
                    HorizontalAlignment="Center"
                    FontWeight="SemiBold"
                    Foreground="#555555"
                    Text="Furnace Alarms" />
            </Viewbox>
            <!--  Buttons  -->
            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                <dx:SimpleButton
                    Command="{Binding SilenceHornCommand}"
                    Content="Silence Horn"
                    FontSize="14"
                    FontWeight="Medium" />
                <dx:SimpleButton
                    x:Name="btnAcknowledgeReset"
                    Width="190"
                    Margin="5,0,0,0"
                    Click="btnAcknowledgeReset_Click"
                    Content="Acknowledge / Reset"
                    FontSize="14"
                    FontWeight="Medium" />
            </StackPanel>

            <!--#region Furnace Alarm Grid-->
            <dxg:GridControl
                x:Name="alarmListView"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                HorizontalContentAlignment="Center"
                AllowDrop="False"
                AutoGenerateColumns="None"
                ItemsSource="{Binding FurnaceAlarmData}"
                SelectedItems="{Binding SelectedFurnaceAlarmData}"
                SelectionMode="Row"
                VirtualizingPanel.IsContainerVirtualizable="False"
                VirtualizingPanel.IsVirtualizing="False"
                VirtualizingPanel.IsVirtualizingWhenGrouping="False">
                <dxg:GridControl.Columns>
                    <dxg:GridColumn
                        Width="0.3*"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox
                                    x:Name="allFurnaceAlarmsCheckbox"
                                    Checked="allFurnaceAlarmsCheckbox_Checked"
                                    Foreground="{Binding Path=RowData.Row.Status, Converter={StaticResource AlarmConditionBasedFGColorConverter}}"
                                    IsChecked="{Binding Path=DataContext.IsSelectAllFurnaceAlarms, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxg:GridControl}}}"
                                    Style="{StaticResource passiveBlack_checkbox}"
                                    Unchecked="allFurnaceAlarmsCheckbox_Checked" />
                            </DataTemplate>
                        </dxg:GridColumn.HeaderTemplate>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox
                                    HorizontalAlignment="Center"
                                    Foreground="{Binding Path=RowData.Row.Status, Converter={StaticResource AlarmConditionBasedFGColorConverter}}"
                                    IsChecked="{Binding RowData.Row.IsSelected}"
                                    Style="{StaticResource passiveBlack_checkbox}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn
                        Width="4*"
                        FieldName="Message"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Status, Converter={StaticResource AlarmConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.AlarmName}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn
                        Width="0.5*"
                        FieldName="Status"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Status, Converter={StaticResource AlarmConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.Status, Mode=OneWay, UpdateSourceTrigger=Explicit}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn
                        Width="1*"
                        FieldName="In Time"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Status, Converter={StaticResource AlarmConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.InDateTime, Mode=OneWay, UpdateSourceTrigger=Explicit, StringFormat={}{0:dd/MM/yyyy HH:mm:ss}}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn
                        Width="1*"
                        FieldName="Out Time"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Status, Converter={StaticResource AlarmConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.OutDateTime, Mode=OneWay, UpdateSourceTrigger=Explicit, StringFormat={}{0:dd/MM/yyyy HH:mm:ss}}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn
                        Width="1*"
                        FieldName="Ack DT"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Status, Converter={StaticResource AlarmConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.AcknowledgedDateTime, Mode=OneWay, UpdateSourceTrigger=Explicit, StringFormat={}{0:dd/MM/yyyy HH:mm:ss}}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                </dxg:GridControl.Columns>
                <dxg:GridControl.View>
                    <dxg:TableView
                        AllowColumnMoving="False"
                        AllowEditing="False"
                        NavigationStyle="Row"
                        ShowGroupPanel="False"
                        ShowIndicator="False"
                        VerticalScrollbarVisibility="Auto">
                        <dxg:TableView.CellStyle>
                            <Style TargetType="dxg:LightweightCellEditor">
                                <Setter Property="Background" Value="#b3b3b3" />
                                <Style.Triggers>

                                    <!--#region I Section-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="I" />
                                            <Condition Binding="{Binding Path=RowData.Row.HasWarned}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <StaticResource ResourceKey="alarmTypeIncomingAnim" />
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="I" />
                                            <Condition Binding="{Binding Path=RowData.Row.HasWarned}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#e53935" />
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="I" />
                                            <Condition Binding="{Binding Path=RowData.Row.HasWarned}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#AD2A28" />
                                    </MultiDataTrigger>
                                    <!--#endregion-->

                                    <!--#region IO Section-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="IO" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#ff7043" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="IO" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#D65D38" />
                                    </MultiDataTrigger>
                                    <!--#endregion-->

                                    <!--#region AI Section-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="AI" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#fcfcfc" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="AI" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#DEDEDE" />
                                    </MultiDataTrigger>
                                    <!--#endregion-->

                                    <!--#region AIO Section-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="AIO" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#fcfcfc" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=RowData.Row.Status}" Value="AIO" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=RowData.IsFocused}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#DEDEDE" />
                                    </MultiDataTrigger>
                                    <!--#endregion-->
                                </Style.Triggers>
                            </Style>
                        </dxg:TableView.CellStyle>
                    </dxg:TableView>
                </dxg:GridControl.View>
            </dxg:GridControl>
            <!--#endregion-->

        </Grid>
        <!--#endregion-->

        <!--#region Event Logs Section-->
        <Grid Grid.Row="1" Margin="10,10,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*" />
                <RowDefinition Height="92*" />
            </Grid.RowDefinitions>

            <!--  System Events  -->
            <Viewbox
                MaxWidth="150"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">
                <TextBlock
                    HorizontalAlignment="Center"
                    FontWeight="SemiBold"
                    Foreground="#555555"
                    Text="System Events" />
            </Viewbox>
            <!--  Buttons  -->
            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                <dx:SimpleButton
                    x:Name="allBtn"
                    Margin="5,0,0,0"
                    Command="{Binding FilterSystemEventCommand}"
                    CommandParameter="all"
                    Content="All"
                    FontSize="14"
                    FontWeight="Medium" />
                <dx:SimpleButton
                    x:Name="systemBtn"
                    Margin="5,0,0,0"
                    Command="{Binding FilterSystemEventCommand}"
                    CommandParameter="system"
                    Content="System"
                    FontSize="14"
                    FontWeight="Medium" />
                <dx:SimpleButton
                    x:Name="manualBtn"
                    Margin="5,0,0,0"
                    Command="{Binding FilterSystemEventCommand}"
                    CommandParameter="manual"
                    Content="Manual"
                    FontSize="14"
                    FontWeight="Medium" />
            </StackPanel>

            <!--#region Event Logs Grid-->
            <dxg:GridControl
                x:Name="systemAlarmListView"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                HorizontalContentAlignment="Center"
                ItemsSource="{Binding ProcessEventLogs}"
                SelectionMode="Row">
                <dxg:GridControl.Columns>
                    <dxg:GridColumn
                        Width="2.4*"
                        FieldName="Message"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Color, Converter={StaticResource EventConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.EventText}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn
                        Width="1*"
                        FieldName="In Time"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Color, Converter={StaticResource EventConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.CreateDate, Mode=OneWay, UpdateSourceTrigger=Explicit, StringFormat={}{0:dd/MM/yyyy HH:mm:ss}}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn
                        Width="1*"
                        FieldName="Alarm Type"
                        HorizontalHeaderContentAlignment="Center"
                        ReadOnly="True"
                        SortIndex="0"
                        SortOrder="Ascending">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="{Binding Path=RowData.Row.Color, Converter={StaticResource EventConditionBasedFGColorConverter}}"
                                    Text="{Binding RowData.Row.Type, Mode=OneWay, UpdateSourceTrigger=Explicit}" />
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                </dxg:GridControl.Columns>
                <dxg:GridControl.View>
                    <dxg:TableView
                        AllowColumnMoving="False"
                        AllowEditing="False"
                        Focusable="True"
                        NavigationStyle="Row"
                        ShowGroupPanel="False"
                        ShowIndicator="False"
                        VerticalScrollbarVisibility="Auto">
                        <dxg:TableView.CellStyle>
                            <Style TargetType="dxg:LightweightCellEditor">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource EventConditionBasedBGColorConverter}">
                                            <Binding Path="RowData.Row.Color" />
                                            <Binding Path="RowData.Row.FocusedColor" />
                                            <Binding Path="RowData.IsFocused" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </dxg:TableView.CellStyle>
                    </dxg:TableView>
                </dxg:GridControl.View>
            </dxg:GridControl>
            <!--#endregion-->

        </Grid>
        <!--#endregion-->

        <!--#region Force loading this page on incoming alarms section-->
        <Border
            Grid.Row="2"
            Margin="10,5,10,0"
            Padding="4"
            Background="{StaticResource LightGrayColor}"
            BorderBrush="{StaticResource CustomPassiveBlackColor}"
            BorderThickness="1">
            <CheckBox
                x:Name="forcePageLoadCb"
                VerticalAlignment="Center"
                Checked="forcePageLoadCb_Checked"
                Content="Force loading this page on incoming alarms"
                FontSize="14"
                FontWeight="SemiBold"
                IsChecked="{Binding AlarmPageForceLoadOption.Value}"
                Unchecked="forcePageLoadCb_Checked">
                <CheckBox.Style>
                    <Style BasedOn="{StaticResource passiveBlack_checkbox}" TargetType="{x:Type CheckBox}">
                        <Setter Property="ToolTip" Value="Gelen alarmlar varsa bu sayfayı yüklemeyi zorla" />
                    </Style>
                </CheckBox.Style>
            </CheckBox>
        </Border>
        <!--#endregion-->
    </Grid>

</UserControl>