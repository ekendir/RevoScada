<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RevoScada.DesktopApplication.Styles">

    <!--#region Control colors-->
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>
    <Color x:Key="GlyphColor">#FF444444</Color>

    <!--  Border colors  -->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>
    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>


    <!--#region Content Clickable Expander-->
    <!--#region Content Clickable Expander Toggle Button-->
    <ControlTemplate x:Key="ExpanderToggBtn_ContentClickable" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="Border"
            Background="{StaticResource SkyGrayColor}"
            BorderBrush="{StaticResource CustomBlackColor}"
            BorderThickness="1">
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <Path
                        x:Name="Arrow"
                        Grid.Column="1"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M 0 0 L 4 4 L 8 0 Z"
                        Fill="{StaticResource CustomPassiveBlackColor}">
                        <Path.LayoutTransform>
                            <ScaleTransform ScaleX="2.4" ScaleY="2.4" />
                        </Path.LayoutTransform>
                    </Path>
                    <ContentPresenter
                        Margin="10,5,5,5"
                        Content="{TemplateBinding Content}"
                        TextBlock.Foreground="{StaticResource CustomPassiveBlackColor}" />
                </StackPanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="#D6D6D6" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                From="#D6D6D6"
                                To="#BFBFBF"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="#D6D6D6"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="Margin"
                                From="5 0 0 0"
                                To="20 0 0 0"
                                Duration="0:0:0.2" />
                            <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="Data"
                                Duration="0">
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <Geometry>M 0 4 L 4 0 L 8 4 Z</Geometry>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="Margin"
                                From="20 0 0 0"
                                To="5 0 0 0"
                                Duration="0:0:0.3" />
                            <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="Data"
                                Duration="0">
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <Geometry>M 0 0 L 4 4 L 8 0 Z</Geometry>
                                        <!--  Collapsed Arrow data  -->
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <Style x:Key="ExpanderContentClickable" TargetType="Expander">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <!--  Control template for expander  -->
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border
                            Name="Border"
                            Grid.Row="0"
                            Background="{StaticResource CustomPassiveBlackColor}"
                            BorderBrush="{StaticResource CustomBlackColor}">
                            <Grid>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="0"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True">
                                    <ContentPresenter.Content>
                                        <ToggleButton
                                            x:Name="toggBtn"
                                            Grid.Column="1"
                                            Background="LightGreen"
                                            Content="{Binding Path=Header, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            FontSize="13"
                                            FontWeight="Bold"
                                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            OverridesDefaultStyle="True"
                                            Template="{StaticResource ExpanderToggBtn_ContentClickable}" />
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Border
                            Name="Content"
                            Grid.Row="1"
                            Background="Transparent"
                            BorderBrush="{StaticResource CustomPassiveBlackColor}"
                            BorderThickness="1,0,1,1">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content, Path=DesiredSize}" />
                            <Setter TargetName="toggBtn" Property="Foreground" Value="{StaticResource LightGrayColor}" />
                            <Setter TargetName="toggBtn" Property="FontSize" Value="14" />
                            <Setter TargetName="toggBtn" Property="FontWeight" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Default Expander-->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="Border"
            Background="{StaticResource LightGrayColor}"
            BorderThickness="0,0,1,0">
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                            <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>

            </Border.BorderBrush>
            <Grid>
                <Path
                    x:Name="CollapsedArrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                    <Path.LayoutTransform>
                        <ScaleTransform ScaleX="2.4" ScaleY="2.4" />
                    </Path.LayoutTransform>
                </Path>
                <Path
                    x:Name="ExpandededArrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 4 L 4 0 L 8 4 Z"
                    Visibility="Collapsed">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                    <Path.LayoutTransform>
                        <ScaleTransform ScaleX="2.4" ScaleY="2.4" />
                    </Path.LayoutTransform>
                </Path>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="#C7C7C7" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                                                                     (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedArrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <!--  Expander style  -->
    <Style TargetType="Expander">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <!--  Control template for expander  -->
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border
                            Name="Border"
                            Grid.Row="0"
                            Background="{StaticResource LightGrayColor}"
                            BorderBrush="{StaticResource CustomBlackColor}"
                            BorderThickness="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>
                                <!--  The following puts the toggle button in the right hand column, just like I want!  -->
                                <ToggleButton
                                    Grid.Column="1"
                                    Background="LightGreen"
                                    IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource ExpanderToggleButton}" />
                                <ContentPresenter
                                    Grid.Column="0"
                                    Margin="4"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border
                            Name="Content"
                            Grid.Row="1"
                            Background="{StaticResource LightGrayColor}"
                            BorderBrush="White"
                            BorderThickness="1,0,1,1">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content, Path=DesiredSize}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>