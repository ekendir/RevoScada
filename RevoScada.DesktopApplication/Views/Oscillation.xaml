<UserControl
    x:Class="RevoScada.DesktopApplication.Views.Oscillation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:RevoScada.DesktopApplication.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:itemViews="clr-namespace:RevoScada.DesktopApplication.Views.ItemViews"
    xmlns:local="clr-namespace:RevoScada.DesktopApplication.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="1080"
    d:DesignWidth="1920"
    Background="{StaticResource MainWindowLight}"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style BasedOn="{StaticResource GenToggleButton_PassiveBlack}" TargetType="RadioButton">
            <Setter Property="Margin" Value="3,2,0,0" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="MaxHeight" Value="30" />
            <Setter Property="FontSize" Value="13" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>
        <Style x:Key="semiBoldTB" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="5,0,0,0" />
        </Style>
        <Style x:Key="noTb" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="0,5,6,0" />
        </Style>
        <Style BasedOn="{StaticResource whiteTextBox}" TargetType="TextBox">
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="30" />
        </Style>
        <!--  TargetType="{x:Type dxe:TextEdit}"  -->
        <Style x:Key="whiteTextBoxDX" TargetType="dxe:TextEdit">
            <Setter Property="Width" Value="55" />
            <Setter Property="Height" Value="20" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
            <Setter Property="Background" Value="{StaticResource GeneralWhite}" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="FontSize" Value="11.5" />
        </Style>


        <converter:VisibilityToOppositeVisibility x:Key="VisibilityToOppositeVisibility" />
    </UserControl.Resources>

    <Grid Loaded="Grid_Loaded">
        <Grid HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--  Background color  -->
            <Grid
                x:Name="FocusableGrid"
                Grid.Row="1"
                Grid.RowSpan="20"
                Grid.ColumnSpan="4"
                Background="{StaticResource LightGrayColor}"
                Focusable="True">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style>
                </Grid.Style>
            </Grid>

            <!--#region Row 1-->
            <TextBlock
                Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="PTC" />
            <TextBlock
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom">
                Tolerance<Run Foreground="{StaticResource CustomPassiveBlackColor}" Text="(°C)" /></TextBlock>
            <TextBlock
                Grid.Row="1"
                Grid.Column="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Sensor Fault Count" />
            <TextBlock
                Grid.Row="1"
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Check Duration (ms)" />
            <!--#endregion-->

            <!--#region Row 2-->
            <StackPanel
                Grid.Row="2"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="1" />
                <RadioButton
                    x:Name="rbtnAlarm"
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-0"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[0].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <!--  1 command type - index  -->
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-0"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[0].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />



                <!--  2  -->
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-0"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[0].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <!--  0  -->
            </StackPanel>


            <dxe:TextEdit
                x:Name="txtPTCTolerance1"
                Grid.Row="2"
                Grid.Column="1"
                dxe:NumericMaskOptions.AlwaysShowDecimalSeparator="False"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                MaskCulture="en-US"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[0].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />



            <dxe:TextEdit
                x:Name="txtPTCSensorFaultCount1"
                Grid.Row="2"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[0].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtPTCCheckDuration1"
                Grid.Row="2"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[0].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 3-->
            <StackPanel
                Grid.Row="3"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="2" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-1"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[1].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-1"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[1].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-1"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[1].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtPTCTolerance2"
                Grid.Row="3"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[1].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtPTCSensorFaultCount2"
                Grid.Row="3"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[1].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtPTCCheckDuration2"
                Grid.Row="3"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[1].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 4-->
            <StackPanel
                Grid.Row="4"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="3" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-2"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[2].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-2"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[2].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-2"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[2].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtPTCTolerance3"
                Grid.Row="4"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[2].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtPTCSensorFaultCount3"
                Grid.Row="4"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[2].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtPTCCheckDuration3"
                Grid.Row="4"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[2].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 5-->
            <TextBlock
                Grid.Row="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="All Air TC" />
            <TextBlock
                Grid.Row="5"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom">
                Tolerance<Run Foreground="{StaticResource CustomPassiveBlackColor}" Text="(°C)" /></TextBlock>
            <TextBlock
                Grid.Row="5"
                Grid.Column="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Sensor Fault Count" />
            <TextBlock
                Grid.Row="5"
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Check Duration (ms)" />
            <!--#endregion-->

            <!--#region Row 6-->
            <StackPanel
                Grid.Row="6"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="1" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-3"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[3].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-3"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[3].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-3"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[3].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtAirTCTolerance1"
                Grid.Row="6"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[3].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtAirTCSensorFaultCount1"
                Grid.Row="6"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[3].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtAirTCCheckDuration1"
                Grid.Row="6"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[3].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 7-->
            <StackPanel
                Grid.Row="7"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="2" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-4"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[4].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-4"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[4].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-4"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[4].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtAirTCTolerance2"
                Grid.Row="7"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[4].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtAirTCSensorFaultCount2"
                Grid.Row="7"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[4].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtAirTCCheckDuration2"
                Grid.Row="7"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[4].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 8-->
            <StackPanel
                Grid.Row="8"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="3" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-5"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[5].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-5"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[5].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-5"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[5].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtAirTCTolerance3"
                Grid.Row="8"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[5].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtAirTCSensorFaultCount3"
                Grid.Row="8"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[5].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtAirTCCheckDuration3"
                Grid.Row="8"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[5].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 9-->
            <TextBlock
                Grid.Row="9"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="All Vacuum Line" />
            <TextBlock
                Grid.Row="9"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom">
                Tolerance<Run Foreground="{StaticResource CustomPassiveBlackColor}" Text="{Binding VacuumUnitTitle, StringFormat='({0})'}" /></TextBlock>
            <TextBlock
                Grid.Row="9"
                Grid.Column="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Sensor Fault Count" />
            <TextBlock
                Grid.Row="9"
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Check Duration (ms)" />
            <!--#endregion-->

            <!--#region Row 10-->
            <StackPanel
                Grid.Row="10"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="1" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-6"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[6].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-6"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[6].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-6"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[6].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtVacuumHeaderTolerance1"
                Grid.Row="10"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[6].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtVacuumHeaderSensorFaultCount1"
                Grid.Row="10"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[6].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtVacuumHeaderCheckDurationInMs1"
                Grid.Row="10"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[6].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 11-->
            <StackPanel
                Grid.Row="11"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="2" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-7"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[7].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-7"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[7].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-7"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[7].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtVacuumHeaderTolerance2"
                Grid.Row="11"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[7].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtVacuumHeaderSensorFaultCount2"
                Grid.Row="11"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[7].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtVacuumHeaderCheckDurationInMs2"
                Grid.Row="11"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[7].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 12-->
            <StackPanel
                Grid.Row="12"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="3" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-8"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[8].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-8"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[8].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-8"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[8].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtVacuumHeaderTolerance3"
                Grid.Row="12"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[8].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtVacuumHeaderSensorFaultCount3"
                Grid.Row="12"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[8].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtVacuumHeaderCheckDurationInMs3"
                Grid.Row="12"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[8].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 13-->
            <TextBlock
                Grid.Row="13"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="MON" />
            <TextBlock
                Grid.Row="13"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom">
                Tolerance<Run Foreground="{StaticResource CustomPassiveBlackColor}" Text="{Binding VacuumUnitTitle, StringFormat='({0})'}" /></TextBlock>
            <TextBlock
                Grid.Row="13"
                Grid.Column="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Sensor Fault Count" />
            <TextBlock
                Grid.Row="13"
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Check Duration (ms)" />
            <!--#endregion-->

            <!--#region Row 14-->
            <StackPanel
                Grid.Row="14"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="1" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-9"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[9].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-9"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[9].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-9"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[9].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtMonTolerance1"
                Grid.Row="14"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[9].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtMonSensorFaultCount1"
                Grid.Row="14"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[9].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtMonCheckDurationInMs1"
                Grid.Row="14"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[9].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 15-->
            <StackPanel
                Grid.Row="15"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="2" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-10"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[10].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-10"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[10].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-10"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[10].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtMonTolerance2"
                Grid.Row="15"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[10].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtMonSensorFaultCount2"
                Grid.Row="15"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[10].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtMonCheckDurationInMs2"
                Grid.Row="15"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[10].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->

            <!--#region Row 16-->
            <StackPanel
                Grid.Row="16"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="3" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-11"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[11].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-11"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[11].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-11"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[11].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtMonTolerance3"
                Grid.Row="16"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[11].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtMonSensorFaultCount3"
                Grid.Row="16"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[11].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <dxe:TextEdit
                x:Name="txtMonCheckDurationInMs3"
                Grid.Row="16"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[11].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--#endregion-->


            <!--#region Row 17-->
            <TextBlock
                Grid.Row="17"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Pressure"
                Visibility="{Binding PressureValueVisibility}" />
            <TextBlock
                Grid.Row="17"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Visibility="{Binding PressureValueVisibility}">
                Tolerance<Run Foreground="{StaticResource CustomPassiveBlackColor}" Text="{Binding VacuumUnitTitle, StringFormat='({0})'}" /></TextBlock>
            <TextBlock
                Grid.Row="17"
                Grid.Column="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Sensor Fault Count"
                Visibility="{Binding PressureValueVisibility}" />
            <TextBlock
                Grid.Row="17"
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Text="Check Duration (ms)"
                Visibility="{Binding PressureValueVisibility}" />
            <!--#endregion-->

            <!--#region Row 18-->
            <StackPanel
                Grid.Row="18"
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                Visibility="{Binding PressureValueVisibility}">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="1" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-12"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[12].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-12"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[12].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-12"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[12].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtPressureTolerance1"
                Grid.Row="18"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[12].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <dxe:TextEdit
                x:Name="txtPressureSensorFaultCount1"
                Grid.Row="18"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[12].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <dxe:TextEdit
                x:Name="txtPressureCheckDurationInMs1"
                Grid.Row="18"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[12].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <!--#endregion-->

            <!--#region Row 19-->
            <StackPanel
                Grid.Row="19"
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                Visibility="{Binding PressureValueVisibility}">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="2"
                    Visibility="{Binding PressureValueVisibility}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-13"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[13].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                    Visibility="{Binding PressureValueVisibility}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-13"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[13].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                    Visibility="{Binding PressureValueVisibility}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-13"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[13].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                    Visibility="{Binding PressureValueVisibility}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtPressureTolerance2"
                Grid.Row="19"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[13].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <dxe:TextEdit
                x:Name="txtPressureSensorFaultCount2"
                Grid.Row="19"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[13].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <dxe:TextEdit
                x:Name="txtPressureCheckDurationInMs2"
                Grid.Row="19"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[13].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <!--#endregion-->

            <!--#region Row 20-->
            <StackPanel
                Grid.Row="20"
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                Visibility="{Binding PressureValueVisibility}">
                <TextBlock
                    Height="{Binding ElementName=rbtnAlarm, Path=ActualHeight}"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource CustomPassiveBlackColor}"
                    Text="3"
                    Visibility="{Binding PressureValueVisibility}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="1-14"
                    Content="Alarm"
                    IsChecked="{Binding OscillationCriterias[14].IsActionAlarm, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                    Visibility="{Binding PressureValueVisibility}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="2-14"
                    Content="Auto Disable"
                    IsChecked="{Binding OscillationCriterias[14].IsActionAutoDisable, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                    Visibility="{Binding PressureValueVisibility}" />
                <RadioButton
                    Command="{Binding ActionCommand}"
                    CommandParameter="0-14"
                    Content="Off"
                    IsChecked="{Binding OscillationCriterias[14].IsActionOff, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                    Visibility="{Binding PressureValueVisibility}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="txtPressureTolerance3"
                Grid.Row="20"
                Grid.Column="1"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[14].ToleranceValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <dxe:TextEdit
                x:Name="txtPressureSensorFaultCount3"
                Grid.Row="20"
                Grid.Column="2"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[14].SensorFaultCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <dxe:TextEdit
                x:Name="txtPressureCheckDurationInMs3"
                Grid.Row="20"
                Grid.Column="3"
                GotFocus="TextBox_GotFocus"
                KeyDown="TextBox_KeyDown"
                LostFocus="TextBox_LostFocus"
                Style="{StaticResource whiteTextBoxDX}"
                Text="{Binding OscillationCriterias[14].CheckDurationInMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PressureValueVisibility}" />
            <!--#endregion-->

        </Grid>
    </Grid>
</UserControl>
