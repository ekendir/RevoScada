<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxet="clr-namespace:DevExpress.Xpf.Editors.Themes;assembly=DevExpress.Xpf.Core.v19.2"
    xmlns:itemViews="clr-namespace:TAI_WPF.Views.ItemViews"
    xmlns:local="clr-namespace:RevoScada.DesktopApplication.Styles"
    xmlns:views="clr-namespace:TAI_WPF.Views">

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Style="{StaticResource standardHeaderBorder}">
                        <TextBlock
                            Width="{TemplateBinding Width}"
                            Padding="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="16"
                            FontWeight="SemiBold"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeader_HorizLeft" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Style="{StaticResource standardHeaderBorder}">
                        <TextBlock
                            Width="{TemplateBinding Width}"
                            Padding="5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="16"
                            FontWeight="Regular"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sensorViewPartPortHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Padding="5" Style="{StaticResource standardHeaderBorder}">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <TextBlock
                                Width="{TemplateBinding Width}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="16"
                                FontWeight="SemiBold"
                                Text="Port Value"
                                TextAlignment="Center" />
                            <TextBlock
                                Width="{TemplateBinding Width}"
                                Margin="3,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="12"
                                FontWeight="Bold"
                                Text="(°C)"
                                TextAlignment="Center" />
                        </StackPanel>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sensorViewVacPortHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Padding="5" Style="{StaticResource standardHeaderBorder}">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <TextBlock
                                Width="{TemplateBinding Width}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="16"
                                FontWeight="SemiBold"
                                Text="Port Value"
                                TextAlignment="Center" />
                            <TextBlock
                                Width="{TemplateBinding Width}"
                                Margin="3,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="12"
                                FontWeight="Bold"
                                Text="(mmhg)"
                                TextAlignment="Center" />
                        </StackPanel>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeader_Checkbox" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Style="{StaticResource standardHeaderBorder}">
                        <CheckBox
                            HorizontalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Command="{TemplateBinding Command}"
                            FontWeight="Bold"
                            IsChecked="False" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0.0" Color="#373638" />
                    <GradientStop Offset="1.0" Color="#77797B" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Standard list view content style  -->
    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource LightGrayColor}" />
        <Setter Property="BorderThickness" Value="1.5" />
    </Style>

    <!--  Custom Vacuum ports list view style  -->
    <Style x:Key="ListViewVacuumPorts" TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource LightGrayColor}" />
        <Setter Property="BorderThickness" Value="0,2,0,2" />
    </Style>

    <!--  Custom list grid view item  -->
    <Style x:Key="listItemGridView" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource MainBlueColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="2"
                        SnapsToDevicePixels="true">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                <GradientStop Offset="0" Color="#326690" />
                                <!--  MainBlueColor  -->
                                <GradientStop Offset="0" Color="#B8B8B8" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <GridViewRowPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="1"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            From="0"
                                            To="3.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            To="{x:Null}"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Setter TargetName="Bd" Property="Background" Value="{StaticResource CreamColor}"/>-->
                            <Setter Property="Foreground" Value="{StaticResource DarkGrayColor}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="Bd" Property="Background" Value="#F2F2F2"/>-->
                            <Setter Property="Foreground" Value="#707070" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Custom list grid view item - RED-->
    <Style x:Key="listItemGridView_Red" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource MainBlueColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="Red"
                        BorderThickness="2"
                        SnapsToDevicePixels="true">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                <GradientStop Offset="0" Color="#326690" />
                                <!--  MainBlueColor  -->
                                <GradientStop Offset="0" Color="#B8B8B8" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <GridViewRowPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="1"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            From="0"
                                            To="3.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            To="{x:Null}"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Bd" Property="Background" Value="DarkRed" />
                            <Setter Property="Foreground" Value="{StaticResource DarkGrayColor}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="DarkRed" />
                            <Setter Property="Foreground" Value="#707070" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--  Custom list view item style  -->
    <Style x:Key="listItemView" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="8,0,2,0" />
        <Setter Property="Foreground" Value="{StaticResource MainBlueColor}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="2"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                <GradientStop Offset="0" Color="#326690" />
                                <!--  MainBlueColor  -->
                                <GradientStop Offset="0" Color="#B8B8B8" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="1"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            From="0"
                                            To="3.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            To="{x:Null}"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource CreamColor}" />
                            <Setter Property="Foreground" Value="{StaticResource DarkGrayColor}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#F2F2F2" />
                            <Setter Property="Foreground" Value="#707070" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Custom list view item style without selectable style  -->
    <Style x:Key="listItemViewNotSelectable" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Custom DevExpress ListBox Styles-->
    <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ResourceKey=ItemTemplate, IsThemeIndependent=True}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid>
            <Grid.Resources>
                <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            </Grid.Resources>
            <Grid x:Name="highlightContainer">
                <Border
                    x:Name="highlight"
                    Width="Auto"
                    Height="Auto"
                    Padding="1,1,1,0"
                    Background="PaleVioletRed"
                    Opacity="0"
                    Visibility="{Binding Owner.AllowItemHighlighting, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <Border
                x:Name="border"
                Width="Auto"
                Height="Auto"
                Padding="1,1,1,0"
                Background="Transparent"
                BorderThickness="0">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                        <GradientStop Offset="0" Color="#326690" />
                        <!--  MainBlueColor  -->
                        <GradientStop Offset="0" Color="#B8B8B8" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <ContentPresenter
                x:Name="contentPresenter"
                Width="Auto"
                Height="Auto"
                Margin="5,3,5,3"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="highlight"
                                Storyboard.TargetProperty="Opacity"
                                To="0.7"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="highlightContainer"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                AccelerationRatio="1"
                                AutoReverse="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                From="0"
                                To="3.0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SelectedUnfocused">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty="Opacity"
                                To=".5"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="highlightContainer"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="border" Property="Background" Value="{StaticResource CreamColor}" />
                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                <Setter Property="Foreground" Value="{StaticResource DarkGrayColor}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=Owner.AllowItemHighlighting, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#707070" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="#BFBFBF" />
                <Setter TargetName="border" Property="BorderThickness" Value="1" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NotSelectableDXItemStyle" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid>
            <Grid.Resources>
                <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            </Grid.Resources>
            <Grid x:Name="highlightContainer">
                <Border
                    x:Name="highlight"
                    Width="Auto"
                    Height="Auto"
                    Padding="1,1,1,0"
                    Background="PaleVioletRed"
                    Opacity="0"
                    Visibility="{Binding Owner.AllowItemHighlighting, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <Border
                x:Name="border"
                Width="Auto"
                Height="Auto"
                Padding="1,1,1,0"
                Background="Transparent"
                BorderThickness="0">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                        <GradientStop Offset="0" Color="#326690" />
                        <!--  MainBlueColor  -->
                        <GradientStop Offset="0" Color="#B8B8B8" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <ContentPresenter
                x:Name="contentPresenter"
                Width="Auto"
                Height="Auto"
                Margin="5,3,5,3"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="border" Property="Background" Value="{StaticResource CreamColor}" />
                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                <Setter Property="Foreground" Value="{StaticResource DarkGrayColor}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=Owner.AllowItemHighlighting, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#707070" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="#BFBFBF" />
                <Setter TargetName="border" Property="BorderThickness" Value="1" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->
</ResourceDictionary>