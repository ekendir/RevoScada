<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RevoScada.DesktopApplication.Styles">

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0,0,0,0"
                            Opacity="0"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border
                        Name="Border"
                        Background="{StaticResource LightGrayColor}"
                        BorderThickness="0"
                        CornerRadius="0">
                        <ScrollViewer Padding="4" Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        Width="15"
                        Height="13"
                        Background="Transparent">
                        <Path
                            x:Name="Collapsed"
                            Margin="1,1,1,1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Data="M 4 0 L 8 4 L 4 8 Z"
                            Fill="{StaticResource GrayColor}"
                            Opacity="0.5">
                            <Path.LayoutTransform>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                            </Path.LayoutTransform>
                        </Path>
                        <Path
                            x:Name="Expanded"
                            Margin="1,1,1,1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Data="M 0 4 L 8 4 L 4 8 Z"
                            Opacity="1"
                            Visibility="Hidden">
                            <Path.LayoutTransform>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                            </Path.LayoutTransform>
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Collapsed"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="1"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemHeader" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Background" Value="{StaticResource SkyGrayColor}" />
        <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="0,4,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="27.75" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />

                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="0">
                            <ContentPresenter
                                x:Name="PART_Header"
                                Margin="5,3,0,3"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                ContentSource="Header" />
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Stretch" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource GrayColor}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItemHeader_MainBlue" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Background" Value="{StaticResource MainBlueColor}" />
        <Setter Property="Foreground" Value="{StaticResource GeneralWhite}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="0,4,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="27.75" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />

                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="0">
                            <ContentPresenter
                                x:Name="PART_Header"
                                Margin="5,3,0,3"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                ContentSource="Header" />
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Stretch" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource MainBlueDarkColor}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItemHeader_ControlBtnVer" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="0,4,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="27.75" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            Padding="{TemplateBinding Padding}"
                            Background="{StaticResource SkyGrayColor}"
                            BorderBrush="{StaticResource SkyGrayColor}"
                            BorderThickness="0"
                            CornerRadius="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter
                                    x:Name="PART_Header"
                                    Margin="5,3,0,3"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    ContentSource="Header" />

                                <StackPanel
                                    x:Name="spControls"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal"
                                    Visibility="Collapsed">
                                    <Button
                                        x:Name="deleteRecipeGroupBtn"
                                        Background="{StaticResource GrayColor}"
                                        Command="{Binding Path=DataContext.DeleteRecipeGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                        Style="{StaticResource deleteBtnWithBorder}"
                                        Visibility="{Binding Path=DataContext.GroupDeleteButtonVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                                    <Button
                                        x:Name="renameRecipeGroupBtn"
                                        Background="{StaticResource GrayColor}"
                                        Command="{Binding Path=DataContext.RenameRecipeGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                        Style="{StaticResource editBtnWithBorder}"
                                        Visibility="{Binding Path=DataContext.GroupEditButtonVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                                </StackPanel>
                            </Grid>
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Stretch" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource GrayColor}" />
                            <Setter TargetName="spControls" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--#region Permission based UI states-->
                        <DataTrigger Binding="{Binding Path=DataContext.Permissions[delete], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" Value="False">
                            <Setter TargetName="deleteRecipeGroupBtn" Property="IsEnabled" Value="False" />
                            <Setter TargetName="deleteRecipeGroupBtn" Property="Opacity" Value="0.5" />
                            <Setter TargetName="deleteRecipeGroupBtn" Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter TargetName="deleteRecipeGroupBtn" Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=DataContext.Permissions[editRecipeName], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" Value="False">
                            <Setter TargetName="renameRecipeGroupBtn" Property="IsEnabled" Value="False" />
                            <Setter TargetName="renameRecipeGroupBtn" Property="Opacity" Value="0.5" />
                            <Setter TargetName="renameRecipeGroupBtn" Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter TargetName="renameRecipeGroupBtn" Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                        </DataTrigger>
                        <!--#endregion-->

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource DarkGrayColor}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="0,4,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="27.75" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />

                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            Padding="{TemplateBinding Padding}"
                            Background="#E6E6E6"
                            BorderThickness="2"
                            CornerRadius="0">
                            <ContentPresenter
                                x:Name="PART_Header"
                                Margin="5,3,0,3"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                ContentSource="Header" />
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                    <GradientStop Offset="0" Color="#326690" />
                                    <!--  MainBlueColor  -->
                                    <GradientStop Offset="0" Color="#B8B8B8" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="1"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            From="0"
                                            To="3.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            To="{x:Null}"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource CreamColor}" />
                            <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
                            <Setter Property="FontWeight" Value="Bold" />

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="#F2F2F2" />
                            <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItem_ControlBtnVer" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource DarkGrayColor}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="0,4,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="27.75" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <ToggleButton
                            x:Name="Expander"
                            Grid.ColumnSpan="2"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />

                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            Padding="{TemplateBinding Padding}"
                            Background="#E6E6E6"
                            BorderThickness="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter
                                    x:Name="PART_Header"
                                    Margin="5,3,0,3"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    ContentSource="Header" />

                                <StackPanel
                                    x:Name="Sp"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    Panel.ZIndex="0"
                                    Orientation="Horizontal">
                                    <Button
                                        x:Name="deleteRecipeBtn"
                                        Background="{StaticResource SkyGrayColor}"
                                        Command="{Binding Path=DataContext.DeleteRecipeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                        CommandParameter="{Binding ElementName=deleteRecipeBtn, Path=Tag}"
                                        IsEnabled="False"
                                        Opacity="0.5"
                                        Style="{StaticResource deleteBtnWithBorder}"
                                        Tag="{TemplateBinding Tag}" />
                                    <Button
                                        x:Name="renameRecipeBtn"
                                        Background="{StaticResource SkyGrayColor}"
                                        Command="{Binding Path=DataContext.RenameRecipeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                        CommandParameter="{Binding ElementName=renameRecipeBtn, Path=Tag}"
                                        IsEnabled="False"
                                        Opacity="0.5"
                                        Style="{StaticResource editBtnWithBorder}"
                                        Tag="{TemplateBinding Tag}" />
                                    <Button
                                        x:Name="integrityCheckBtn"
                                        Background="{StaticResource SkyGrayColor}"
                                        Command="{Binding Path=DataContext.IntegrityCheckCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                        CommandParameter="{Binding ElementName=integrityCheckBtn, Path=Tag}"
                                        IsEnabled="False"
                                        Opacity="0.5"
                                        Style="{StaticResource integrityCheckBtnWithBorder}"
                                        Tag="{TemplateBinding Tag}" />
                                    <Button
                                        x:Name="saveChangesBtn"
                                        Background="{StaticResource SkyGrayColor}"
                                        Command="{Binding Path=DataContext.SaveChangesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                        CommandParameter="{Binding ElementName=saveChangesBtn, Path=Tag}"
                                        IsEnabled="False"
                                        Opacity="0.5"
                                        Style="{StaticResource saveBtnWithBorder}"
                                        Tag="{TemplateBinding Tag}" />
                                    <Button
                                        x:Name="isActiveRecipeBtn"
                                        Background="{StaticResource SkyGrayColor}"
                                        Command="{Binding Path=DataContext.IsActiveRecipeBtnCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                        CommandParameter="{Binding ElementName=isActiveRecipeBtn, Path=Tag}"
                                        IsEnabled="False"
                                        Opacity="0.5"
                                        Style="{StaticResource isActiveRecipeBtnWithBorder}"
                                        Tag="{TemplateBinding Tag}" />




                                </StackPanel>
                            </Grid>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                    <GradientStop Offset="0" Color="#326690" />
                                    <!--  MainBlueColor  -->
                                    <GradientStop Offset="0" Color="#B8B8B8" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="disabled">
                            <Setter TargetName="Bd" Property="Opacity" Value="0.5" />
                            <Setter TargetName="Sp" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="Tag" Value="isValid">
                            <!--<Setter Property="Focusable" Value="False" />-->
                            <Setter TargetName="Bd" Property="Opacity" Value="0.5" />
                            <!--<Setter TargetName="Sp" Property="Visibility" Value="Collapsed" />-->
                        </Trigger>

                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--<Trigger Property="HasItems" Value="true">
                            <Setter Property="Focusable" Value="false" />
                        </Trigger>-->
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="1"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            From="0"
                                            To="3.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="BorderBrush.GradientStops[0].Offset"
                                            To="{x:Null}"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource CreamColor}" />
                            <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter TargetName="deleteRecipeBtn" Property="IsEnabled" Value="True" />
                            <Setter TargetName="renameRecipeBtn" Property="IsEnabled" Value="True" />
                            <Setter TargetName="saveChangesBtn" Property="IsEnabled" Value="True" />
                            <Setter TargetName="isActiveRecipeBtn" Property="IsEnabled" Value="True" />
                            <Setter TargetName="integrityCheckBtn" Property="IsEnabled" Value="True" />

                            <Setter TargetName="deleteRecipeBtn" Property="Opacity" Value="1" />
                            <Setter TargetName="renameRecipeBtn" Property="Opacity" Value="1" />
                            <Setter TargetName="saveChangesBtn" Property="Opacity" Value="1" />
                            <Setter TargetName="isActiveRecipeBtn" Property="Opacity" Value="1" />
                            <Setter TargetName="integrityCheckBtn" Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="Opacity" Value="1" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="#F2F2F2" />
                            <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
                        </MultiTrigger>

                        <!--#region Permission based UI states-->
                        <DataTrigger Binding="{Binding Path=DataContext.Permissions[editRecipeName], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" Value="False">
                            <Setter TargetName="renameRecipeBtn" Property="IsEnabled" Value="False" />
                            <Setter TargetName="renameRecipeBtn" Property="Opacity" Value="0.5" />
                            <Setter TargetName="renameRecipeBtn" Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter TargetName="renameRecipeBtn" Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=DataContext.Permissions[delete], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" Value="False">
                            <Setter TargetName="deleteRecipeBtn" Property="IsEnabled" Value="False" />
                            <Setter TargetName="deleteRecipeBtn" Property="Opacity" Value="0.5" />
                            <Setter TargetName="deleteRecipeBtn" Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter TargetName="deleteRecipeBtn" Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=DataContext.Permissions[integrityCheckRecipe], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" Value="False">
                            <Setter TargetName="integrityCheckBtn" Property="IsEnabled" Value="False" />
                            <Setter TargetName="integrityCheckBtn" Property="Opacity" Value="0.5" />
                            <Setter TargetName="integrityCheckBtn" Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter TargetName="integrityCheckBtn" Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=DataContext.Permissions[updateRecipe], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" Value="False">
                            <Setter TargetName="saveChangesBtn" Property="IsEnabled" Value="False" />
                            <Setter TargetName="saveChangesBtn" Property="Opacity" Value="0.5" />
                            <Setter TargetName="saveChangesBtn" Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter TargetName="saveChangesBtn" Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=DataContext.Permissions[activeDeactiveRecipe], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" Value="False">
                            <Setter TargetName="isActiveRecipeBtn" Property="IsEnabled" Value="False" />
                            <Setter TargetName="isActiveRecipeBtn" Property="Opacity" Value="0.5" />
                            <Setter TargetName="isActiveRecipeBtn" Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter TargetName="isActiveRecipeBtn" Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" />
                        </DataTrigger>

                        <!--#endregion-->

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>