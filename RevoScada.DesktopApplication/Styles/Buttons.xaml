<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:RevoScada.DesktopApplication.Converters"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <converters:IsEqualOrGreaterThanConverter x:Key="IsEqualOrGreaterThanConverter" />

    <!--  Login buttons  -->
    <Style x:Key="loginBtn" TargetType="Button">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{StaticResource MainBlueColor}"
                        BorderBrush="{StaticResource CustomBlackColor}"
                        BorderThickness="0.6"
                        CornerRadius="4">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1.2" Color="#FF2E2E2E" />
                        </Border.Effect>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                x:Name="img"
                                Width="48"
                                Height="48"
                                Margin="5,0,0,0"
                                Source="pack://siteoforigin:,,,/Resources/Checked_16px.png" />
                            <Label
                                x:Name="label"
                                Margin="2,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                Foreground="White" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            From="#1B3659"
                                            To="#2B5F8C"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="label"
                                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                                            From="White"
                                            To="Wheat"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Width)"
                                            To="90"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Height)"
                                            To="35"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="FontSize"
                                            From="13"
                                            To="15"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#1B3659"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="label"
                                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                                            From="Wheat"
                                            To="White"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Width)"
                                            To="80"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Height)"
                                            To="30"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="FontSize"
                                            From="15"
                                            To="13"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="img" Property="Width" Value="23" />
                            <Setter TargetName="img" Property="Height" Value="23" />
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/Checked_Green_16px.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="loginCloseBtn" TargetType="Button">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{StaticResource MainBlueColor}"
                        BorderBrush="Black"
                        BorderThickness="1"
                        CornerRadius="4">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1.2" Color="#FF2E2E2E" />
                        </Border.Effect>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                x:Name="img"
                                Width="20"
                                Height="20"
                                Margin="5,0,0,0"
                                Source="pack://siteoforigin:,,,/Resources/Cancel_16px.png" />
                            <Label
                                x:Name="label"
                                Margin="2,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                Foreground="White" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            From="#1B3659"
                                            To="#2B5F8C"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="label"
                                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                                            From="White"
                                            To="Wheat"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Width)"
                                            To="90"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Height)"
                                            To="35"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="FontSize"
                                            From="13"
                                            To="15"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#1B3659"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="label"
                                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                                            From="Wheat"
                                            To="White"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Width)"
                                            To="80"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Height)"
                                            To="30"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="FontSize"
                                            From="15"
                                            To="13"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="img" Property="Width" Value="23" />
                            <Setter TargetName="img" Property="Height" Value="23" />
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/Cancel_Red_16px.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  *** Main window toolbar buttons ***  -->
    <!--  Toolbar button base style  -->
    <Style x:Key="toolbarBaseBtn" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/vacuumLines.png" />
            <CornerRadius x:Key="cornerRadiusValue">14</CornerRadius>
        </Style.Resources>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <!--<Setter Property="Tooltip" Value="{Binding PageTagName, RelativeSource={RelativeSource Self}}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="2"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="{DynamicResource cornerRadiusValue}">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel
                                x:Name="sp"
                                Margin="2,0,2,2"
                                Orientation="Vertical">
                                <Image
                                    x:Name="img"
                                    Width="48"
                                    Height="48"
                                    Margin="5,5,0,0"
                                    Source="{DynamicResource imgSrc}" />
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--#region IsChecked = False, IsMouseOver = True-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>

                        </MultiTrigger>
                        <!--#endregion-->

                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TrendBtnStyle" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_trend.png" />
            <CornerRadius x:Key="cornerRadiusValue">14 14 0 0</CornerRadius>
        </Style.Resources>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Tag" Value="UCState" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="10"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="{DynamicResource cornerRadiusValue}">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel
                                x:Name="sp"
                                Margin="2,0,2,2"
                                Orientation="Vertical">
                                <Image
                                    x:Name="img"
                                    Width="48"
                                    Height="48"
                                    Margin="5,5,0,0"
                                    Source="{DynamicResource imgSrc}" />
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                                <TextBlock
                                    x:Name="windowStateTb"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="10"
                                    Foreground="{StaticResource CustomBlackColor}"
                                    Text="(Opened)"
                                    TextAlignment="Center"
                                    Visibility="Collapsed" />
                            </StackPanel>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="WindowState">
                            <Setter TargetName="windowStateTb" Property="Visibility" Value="Visible" />
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <!--#region IsChecked = False, IsMouseOver = True-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="UCState" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>

                        </MultiTrigger>
                        <!--#endregion-->

                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=TrendNewWindowBtn, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding ElementName=TrendNewWindowBtn, Path=(UIElement.RenderTransform).(TransformGroup.Children)[1].ScaleX}" Value="1.2" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="toBeStopped">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.2"
                                Duration="0:0:0.1" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.2"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="toBeStopped" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Sensor View button  -->
    <Style x:Key="SensorViewBtnStyle" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_sensorview.png" />
            <CornerRadius x:Key="cornerRadiusValue">14 14 0 0</CornerRadius>
        </Style.Resources>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Tag" Value="UCState" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="10"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="{DynamicResource cornerRadiusValue}">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel
                                x:Name="sp"
                                Margin="2,0,2,2"
                                Orientation="Vertical">
                                <Image
                                    x:Name="img"
                                    Width="48"
                                    Height="48"
                                    Margin="5,5,0,0"
                                    Source="{DynamicResource imgSrc}" />
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                                <TextBlock
                                    x:Name="windowStateTb"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="10"
                                    Foreground="{StaticResource CustomBlackColor}"
                                    Text="(Opened)"
                                    TextAlignment="Center"
                                    Visibility="Collapsed" />
                            </StackPanel>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="WindowState">
                            <Setter TargetName="windowStateTb" Property="Visibility" Value="Visible" />
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <!--#region IsChecked = False, IsMouseOver = True-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="UCState" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>

                        </MultiTrigger>
                        <!--#endregion-->

                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=SensorViewNewWindowBtn, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding ElementName=SensorViewNewWindowBtn, Path=(UIElement.RenderTransform).(TransformGroup.Children)[1].ScaleX}" Value="1.2" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="toBeStopped">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.2"
                                Duration="0:0:0.1" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.2"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="toBeStopped" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseNewWindowBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="12.5" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="36" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="IsEnabled" Value="False" />
    </Style>

    <Style
        x:Key="TrendNewWindowBtnStyle"
        BasedOn="{StaticResource BaseNewWindowBtnStyle}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <sys:Double x:Key="opacityVal">0.01</sys:Double>
            <sys:Double x:Key="scaleXVal">1.1</sys:Double>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.BorderBrush>
                            <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                        </Border.BorderBrush>
                        <TextBlock
                            x:Name="textblock"
                            Margin="5,2,5,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="New Window"
                            TextAlignment="Center"
                            TextWrapping="WrapWithOverflow" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ElementName=TrendBtn, Path=IsChecked}" Value="False">
                            <Setter Property="IsChecked" Value="False" />
                        </DataTrigger>

                        <Trigger Property="Opacity" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False" />
                                <Condition Binding="{Binding ElementName=TrendBtn, Path=RenderTransform.ScaleX, Converter={StaticResource IsEqualOrGreaterThanConverter}, ConverterParameter={StaticResource scaleXVal}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Opacity, Converter={StaticResource IsEqualOrGreaterThanConverter}, ConverterParameter={StaticResource opacityVal}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>

                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="-50"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SensorViewNewWindowBtnStyle"
        BasedOn="{StaticResource BaseNewWindowBtnStyle}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <sys:Double x:Key="opacityVal">0.01</sys:Double>
            <sys:Double x:Key="scaleXVal">1.1</sys:Double>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.BorderBrush>
                            <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                        </Border.BorderBrush>
                        <TextBlock
                            x:Name="textblock"
                            Margin="5,2,5,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="New Window"
                            TextAlignment="Center"
                            TextWrapping="WrapWithOverflow" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ElementName=SensorViewBtn, Path=IsChecked}" Value="False">
                            <Setter Property="IsChecked" Value="False" />
                        </DataTrigger>

                        <Trigger Property="Opacity" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False" />
                                <Condition Binding="{Binding ElementName=SensorViewBtn, Path=RenderTransform.ScaleX, Converter={StaticResource IsEqualOrGreaterThanConverter}, ConverterParameter={StaticResource scaleXVal}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Opacity, Converter={StaticResource IsEqualOrGreaterThanConverter}, ConverterParameter={StaticResource opacityVal}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>

                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="-50"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Vacuum Lines button  -->
    <Style
        x:Key="VacuumBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_vacuumLines.png" />
        </Style.Resources>
    </Style>

    <!--  Enter Parts button  -->
    <Style x:Key="EnterPartsBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="2"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="14">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel Orientation="Vertical">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Image
                                        x:Name="img"
                                        Width="48"
                                        Height="48"
                                        Margin="30,5,0,0"
                                        Source="pack://siteoforigin:,,,/Resources/main_menu_enterParts.png" />
                                    <Image
                                        x:Name="indicatorImg"
                                        Grid.Column="0"
                                        Width="18"
                                        Height="18"
                                        Margin="5,15,10,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Source="pack://siteoforigin:,,,/Resources/Red_Cross_48px.png" />
                                </StackPanel>
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  Check if Enter Parts page passed or not  -->
                        <DataTrigger Binding="{Binding ElementName=EnterPartsChecker, Path=IsChecked}" Value="True">
                            <Setter TargetName="indicatorImg" Property="Source" Value="pack://siteoforigin:,,,/Resources/Green_Tick_48px.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EnterPartsChecker, Path=IsChecked}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            AutoReverse="True"
                                            DecelerationRatio="0.3"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            DecelerationRatio="0.3"
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="#a0a0a0"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#444455"
                                            To="#333333"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="22"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="22"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#333333"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="18"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="18"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Recipe Editor button  -->
    <Style x:Key="RecipeEditorBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="2"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="14">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel Orientation="Vertical">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Image
                                        x:Name="img"
                                        Width="48"
                                        Height="48"
                                        Margin="30,5,0,0"
                                        Source="pack://siteoforigin:,,,/Resources/main_menu_recipeEditor.png" />
                                    <Image
                                        x:Name="indicatorImg"
                                        Grid.Column="0"
                                        Width="18"
                                        Height="18"
                                        Margin="5,15,10,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Source="pack://siteoforigin:,,,/Resources/Red_Cross_48px.png" />
                                </StackPanel>
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Check if Recipe Editor page passed or not  -->
                        <DataTrigger Binding="{Binding ElementName=RecipeEditorChecker, Path=IsChecked}" Value="True">
                            <Setter TargetName="indicatorImg" Property="Source" Value="pack://siteoforigin:,,,/Resources/Green_Tick_48px.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=RecipeEditorChecker, Path=IsChecked}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            AutoReverse="True"
                                            DecelerationRatio="0.3"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            DecelerationRatio="0.3"
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="#a0a0a0"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#444455"
                                            To="#333333"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="22"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="22"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#333333"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="18"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="18"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Integrity Checks button  -->
    <Style x:Key="IntegrityChecksBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="2"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="14">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel Orientation="Vertical">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Image
                                        x:Name="img"
                                        Width="48"
                                        Height="48"
                                        Margin="30,5,0,0"
                                        Source="pack://siteoforigin:,,,/Resources/main_menu_integrityChecks.png" />
                                    <Image
                                        x:Name="indicatorImg"
                                        Grid.Column="0"
                                        Width="18"
                                        Height="18"
                                        Margin="5,15,10,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Source="pack://siteoforigin:,,,/Resources/Red_Cross_48px.png" />
                                </StackPanel>
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Check if Integrity Checks page passed or not  -->
                        <DataTrigger Binding="{Binding ElementName=IntegrityPageChecker, Path=IsChecked}" Value="True">
                            <Setter TargetName="indicatorImg" Property="Source" Value="pack://siteoforigin:,,,/Resources/Green_Tick_48px.png" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=IntegrityPageChecker, Path=IsChecked}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            AutoReverse="True"
                                            DecelerationRatio="0.3"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            DecelerationRatio="0.3"
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="#a0a0a0"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#444455"
                                            To="#333333"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="22"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="22"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#333333"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="18"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="18"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Run Operation button  -->
    <Style
        x:Key="RunOperationBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_start.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="ManOperationBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_manualoperation.png" />
        </Style.Resources>
    </Style>

    <!--#region Manual Operation Window Style-->
    <!--  Manual Operation button  -->
    <!--<Style x:Key="ManOperationBtnStyle" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_manualoperation.png"/>
            <CornerRadius x:Key="cornerRadiusValue">14 14 0 0</CornerRadius>
        </Style.Resources>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Tag" Value="UCState"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="{DynamicResource cornerRadiusValue}" BorderThickness="0" BorderBrush="Transparent"
                            Background="{TemplateBinding Background}">
                        <StackPanel x:Name="sp" Orientation="Vertical" Margin="2 0 2 2">
                            <Image x:Name="img" Margin="5 5 0 0" Width="48" Height="48" Source="{DynamicResource imgSrc}"/>
                            <TextBlock x:Name="textblock" TextWrapping="WrapWithOverflow" Margin="2 10 0 0"
                                       Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center"
                                  TextAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}">
                            </TextBlock>
                            <StackPanel x:Name="windowStateTb" Margin="0 2 0 0" Visibility="Collapsed">
                                <TextBlock
                                  Foreground="{StaticResource CustomBlackColor}" FontSize="12" HorizontalAlignment="Center"
                                  TextAlignment="Center" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Text="Manual Operation"/>
                                <TextBlock Margin="0 2 0 2" Foreground="{StaticResource CustomBlackColor}" FontSize="10" HorizontalAlignment="Center"
                                  TextAlignment="Center" VerticalAlignment="Center" Text="(Opened a Window)"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Tag" Value="WindowState">
                            <Setter TargetName="textblock" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="windowStateTb" Property="Visibility" Value="Visible"/>
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger>

    -->
    <!--#region IsChecked = False, IsMouseOver = True-->
    <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="UCState"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                                            To="#afafaf"/>
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="textblock"
                                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                                            To="#444455"/>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="img"
                                                            Storyboard.TargetProperty="(Image.Width)"
                                                            To="49"/>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="img"
                                                            Storyboard.TargetProperty="(Image.Height)"
                                                            To="49"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                                            To="1.2" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                                            To="1.2" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                                        To="#a0a0a0"/>
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="textblock"
                                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                                            To="#444455"/>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="img"
                                                            Storyboard.TargetProperty="(Image.Width)"
                                                            To="48"/>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="img"
                                                            Storyboard.TargetProperty="(Image.Height)"
                                                            To="48"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                                            To="1" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                                            To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
    -->
    <!--#endregion-->
    <!--

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=ManOpNewWindowBtn, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding ElementName=ManOpNewWindowBtn, Path=(UIElement.RenderTransform).(TransformGroup.Children)[1].ScaleX}" Value="1.2"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="toBeStopped">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                                            To="1.2" Duration="0:0:0.1"/>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                                            To="1.2" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="toBeStopped"/>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style x:Key="ManOpNewWindowBtnStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseNewWindowBtnStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <converters:IsEqualOrGreaterThanConverter x:Key="IsEqualOrGreaterThanConverter"/>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" CornerRadius="2" BorderThickness="0" BorderBrush="Transparent"
                            Background="{TemplateBinding Background}">
                        <TextBlock x:Name="textblock" TextWrapping="WrapWithOverflow" Margin="5 2 5 2"
                                       Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center"
                                  TextAlignment="Center" VerticalAlignment="Center" Text="Open in a New Window">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ElementName=ManOperationBtn, Path=IsChecked}" Value="False">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>

                        <Trigger Property="Opacity" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False"/>
                                <Condition Binding="{Binding ElementName=ManOperationBtn, Path=RenderTransform.ScaleX}" Value="1.2"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.3" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0.3"
                                                         Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.5" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Opacity,
                                                             Converter={StaticResource IsEqualOrGreaterThanConverter}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                                            To="#afafaf"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                                         To="0" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                            To="1.2" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                                            To="1.2" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>

                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"
                                                        Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                                        To="#a0a0a0"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                                         To="-50" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                            To="1" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                                            To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--#endregion-->

    <!--  Alarm button  -->
    <Style x:Key="AlarmBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="MaxWidth" Value="100" />
        <Setter Property="MaxHeight" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Tag" Value="UCState" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="2"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="14">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel
                                x:Name="sp"
                                Margin="2,0,2,2"
                                Orientation="Vertical">
                                <Image
                                    x:Name="img"
                                    Width="48"
                                    Height="48"
                                    Margin="5,5,0,0"
                                    Source="pack://siteoforigin:,,,/Resources/main_menu_alarm.png" />
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                                <TextBlock
                                    x:Name="windowStateTb"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="10"
                                    Foreground="{StaticResource CustomBlackColor}"
                                    Text="(Opened)"
                                    TextAlignment="Center"
                                    Visibility="Collapsed" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Tag" Value="WindowState">
                            <Setter TargetName="windowStateTb" Property="Visibility" Value="Visible" />
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <!--  Check if there are any incoming alarms  -->
                        <DataTrigger Binding="{Binding ElementName=IncomingAlarmsChecker, Path=IsChecked}" Value="True">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/main_menu_alarm_incoming.png" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            AutoReverse="True"
                                            DecelerationRatio="0.3"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            AutoReverse="True"
                                            DecelerationRatio="0.3"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            AutoReverse="True"
                                            DecelerationRatio="0.3"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="windowStateTb"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            DecelerationRatio="0.3"
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            DecelerationRatio="0.3"
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                        <DoubleAnimation
                                            AccelerationRatio="0.7"
                                            DecelerationRatio="0.3"
                                            Storyboard.TargetName="windowStateTb"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=IncomingAlarmsChecker, Path=IsChecked}" Value="False">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/main_menu_alarm.png" />
                        </DataTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="#a0a0a0"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#444455"
                                            To="#333333"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="#333333"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Recipe button  -->
    <Style
        x:Key="RecipeBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_activerecipe.png" />
        </Style.Resources>
    </Style>
    <!--  Reports button  -->
    <Style
        x:Key="ReportsBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_reports.png" />
        </Style.Resources>
    </Style>
    <!--  Quality button  -->
    <Style
        x:Key="QualityBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_quality_48px.png" />
        </Style.Resources>
    </Style>
    <!--  Calibration button  -->
    <Style x:Key="CalibrationBtnStyle" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_calibration.png" />
            <CornerRadius x:Key="cornerRadiusValue">14 14 0 0</CornerRadius>
        </Style.Resources>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Tag" Value="UCState" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid
                            x:Name="gridPanel"
                            Panel.ZIndex="2"
                            Visibility="Collapsed">
                            <Grid.Background>
                                <SolidColorBrush Opacity="0.6" Color="#4c4c4c" />
                            </Grid.Background>
                        </Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="{DynamicResource cornerRadiusValue}">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                            </Border.BorderBrush>
                            <StackPanel
                                x:Name="sp"
                                Margin="2,0,2,2"
                                Orientation="Vertical">
                                <Image
                                    x:Name="img"
                                    Width="48"
                                    Height="48"
                                    Margin="5,5,0,0"
                                    Source="{DynamicResource imgSrc}" />
                                <TextBlock
                                    x:Name="textblock"
                                    Margin="2,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow" />
                                <TextBlock
                                    x:Name="windowStateTb"
                                    Margin="0,2,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="10"
                                    Foreground="{StaticResource CustomBlackColor}"
                                    Text="(Opened)"
                                    TextAlignment="Center"
                                    Visibility="Collapsed" />
                            </StackPanel>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="WindowState">
                            <Setter TargetName="windowStateTb" Property="Visibility" Value="Visible" />
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <!--#region IsChecked = False, IsMouseOver = True-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="UCState" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="49"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            To="#444455"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="img"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="48"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>

                        </MultiTrigger>
                        <!--#endregion-->

                        <Trigger Property="Tag" Value="darkMode">
                            <Setter TargetName="gridPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Tag" Value="disabled">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=CalibrationNewWindowBtn, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding ElementName=CalibrationNewWindowBtn, Path=(UIElement.RenderTransform).(TransformGroup.Children)[1].ScaleX}" Value="1.2" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="toBeStopped">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.2"
                                Duration="0:0:0.1" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.2"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="toBeStopped" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CalibrationNewWindowBtnStyle"
        BasedOn="{StaticResource BaseNewWindowBtnStyle}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <sys:Double x:Key="opacityVal">0.01</sys:Double>
            <sys:Double x:Key="scaleXVal">1.1</sys:Double>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.BorderBrush>
                            <SolidColorBrush Opacity="0.1" Color="#4c4c4c" />
                        </Border.BorderBrush>
                        <TextBlock
                            x:Name="textblock"
                            Margin="5,2,5,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="New Window"
                            TextAlignment="Center"
                            TextWrapping="WrapWithOverflow" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ElementName=CalibrationBtn, Path=IsChecked}" Value="False">
                            <Setter Property="IsChecked" Value="False" />
                        </DataTrigger>

                        <Trigger Property="Opacity" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False" />
                                <Condition Binding="{Binding ElementName=CalibrationBtn, Path=RenderTransform.ScaleX, Converter={StaticResource IsEqualOrGreaterThanConverter}, ConverterParameter={StaticResource scaleXVal}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Opacity, Converter={StaticResource IsEqualOrGreaterThanConverter}, ConverterParameter={StaticResource opacityVal}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#afafaf"
                                            Duration="0:0:0.3" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="0"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>

                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            To="#a0a0a0"
                                            Duration="0:0:0.3" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="-50"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>

                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="3" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Oscillation button  -->
    <Style
        x:Key="OscillationBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_oscillation.png" />
        </Style.Resources>
    </Style>
    <!--  User Control button  -->
    <Style
        x:Key="UserControlBtnStyle"
        BasedOn="{StaticResource toolbarBaseBtn}"
        TargetType="ToggleButton">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_user_management.png" />
        </Style.Resources>
    </Style>
    <!--  *** Main window toolbar buttons END HERE ***  -->

    <!--  Vacuum lines page VAC button  -->
    <Style x:Key="vacuumBaseBtn" TargetType="{x:Type RadioButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="mainColor" Color="#326690" />
            <LinearGradientBrush x:Key="borderBrush" StartPoint="1,0" EndPoint="0,0">
                <GradientStop Offset="0" Color="#326690" />
                <!--  MainBlueColor  -->
                <GradientStop Offset="0" Color="Transparent" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="selectedForeground" Color="White" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="45" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="border"
                        Background="#e0e0e0"
                        BorderBrush="{DynamicResource borderBrush}"
                        BorderThickness="2"
                        CornerRadius="0">
                        <BulletDecorator>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="2,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Opacity="0.5"
                                RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </Border>
                    <!--  Radio button text foreground color  -->
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                            <Setter Property="FontSize" Value="13.5" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="{DynamicResource selectedForeground}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource mainColor}" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource mainColor}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                            <Setter Property="FontSize" Value="13.5" />
                            <Setter Property="Foreground" Value="{DynamicResource selectedForeground}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource mainColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                            <Setter Property="FontSize" Value="13.5" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource mainColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="vacBtn"
        BasedOn="{StaticResource vacuumBaseBtn}"
        TargetType="{x:Type RadioButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="mainColor" Color="#336699" />
            <!--  MainBlueColor  -->
            <LinearGradientBrush x:Key="borderBrush" StartPoint="1,0" EndPoint="0,0">
                <GradientStop Offset="0" Color="#26a69a" />
                <GradientStop Offset="0" Color="Transparent" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="selectedForeground" Color="#f1f1f1" />
        </Style.Resources>
    </Style>
    <Style
        x:Key="venBtn"
        BasedOn="{StaticResource vacuumBaseBtn}"
        TargetType="{x:Type RadioButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="mainColor" Color="#607d8b" />
            <!--  TechnicalLightBlue  -->
            <LinearGradientBrush x:Key="borderBrush" StartPoint="1,0" EndPoint="0,0">
                <GradientStop Offset="0" Color="#26a69a" />
                <GradientStop Offset="0" Color="Transparent" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="selectedForeground" Color="#f1f1f1" />
        </Style.Resources>
    </Style>
    <Style
        x:Key="offBtn"
        BasedOn="{StaticResource vacuumBaseBtn}"
        TargetType="{x:Type RadioButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="mainColor" Color="#455a64" />
            <LinearGradientBrush x:Key="borderBrush" StartPoint="1,0" EndPoint="0,0">
                <GradientStop Offset="0" Color="#26a69a" />
                <GradientStop Offset="0" Color="Transparent" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="selectedForeground" Color="#f1f1f1" />
        </Style.Resources>
    </Style>

    <!--  General turquoise button  -->
    <Style x:Key="turquoiseBtn" TargetType="Button">
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{StaticResource TurquoiseColor}"
                        BorderBrush="{StaticResource CustomBlackColor}"
                        BorderThickness="0.6"
                        CornerRadius="0">
                        <TextBlock
                            x:Name="text"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TurquoiseColorOnHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonInfoStyle" TargetType="{x:Type dxe:ButtonInfo}">
        <Setter Property="Border.Background" Value="{StaticResource TurquoiseColor}" />
        <Setter Property="ButtonKind" Value="Simple" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border
                        x:Name="border"
                        Background="{StaticResource TurquoiseColor}"
                        BorderBrush="{StaticResource CustomBlackColor}"
                        BorderThickness="0.6"
                        CornerRadius="0">
                        <TextBlock
                            x:Name="text"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Text="{TemplateBinding Content}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">

                <Setter Property="Background" Value="Red" />
                <Setter Property="BorderThickness" Value="0" />

            </Style>
            <Style TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="Name" Value="PART_Item">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="turquoiseBtn_onOff" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource TurquoiseColor}"
                        BorderBrush="Black"
                        BorderThickness="0.6"
                        CornerRadius="0">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Label
                                x:Name="label"
                                Margin="2,0,2,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                Foreground="White" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TurquoiseColorOnHover}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="label" Property="Content" Value="Off" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="label" Property="Content" Value="On" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Hamburger menu button  -->
    <Style x:Key="hamBtn" TargetType="Button">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{StaticResource LightGrayColor}"
                        BorderBrush="{StaticResource CustomBlackColor}"
                        BorderThickness="1"
                        CornerRadius="3">
                        <Image
                            x:Name="arrowImg"
                            Width="28"
                            Height="28"
                            HorizontalAlignment="Center"
                            Source="pack://siteoforigin:,,,/Resources/arrow_customGray_48px.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Image size change  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="36"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="36"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Image size change  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="28"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="28"
                                            Duration="0:0:0.2" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="hamBtn_flipped" TargetType="Button">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{StaticResource LightGrayColor}"
                        BorderBrush="{StaticResource CustomBlackColor}"
                        BorderThickness="1"
                        CornerRadius="3">
                        <Image
                            x:Name="arrowImg"
                            Width="28"
                            Height="28"
                            HorizontalAlignment="Center"
                            RenderTransformOrigin="0.5,0.5"
                            Source="pack://siteoforigin:,,,/Resources/arrow_customGray_48px.png">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </Image.RenderTransform>
                        </Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Image size change  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="36"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="36"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Image size change  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="28"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="arrowImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="28"
                                            Duration="0:0:0.2" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sensor View listview button  -->
    <Style x:Key="sensorViewListBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox x:Name="viewboxImg" MaxWidth="20">
                        <Image
                            x:Name="checkedImg"
                            Width="20"
                            Height="20"
                            VerticalAlignment="Center"
                            Source="pack://siteoforigin:,,,/Resources/Edit_Pencil_GenWhite_40px.png" />
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding EnableDisableCommand}" Value="0">
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Pencil_40px.png" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding EnableDisableCommand}" Value="0" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}" Value="PermissionGranted" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Pencil_DarkBlue_40px.png" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding EnableDisableCommand}" Value="1" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}" Value="PermissionGranted" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Pencil_Gray_40px.png" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding EnableDisableCommand}" Value="2" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}" Value="PermissionGranted" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Pencil_Gray_40px.png" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding EnableDisableCommand}" Value="3" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}" Value="PermissionGranted" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Pencil_Gray_40px.png" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding EnableDisableCommand}" Value="4" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}" Value="PermissionGranted" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Pencil_Gray_40px.png" />
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger Property="Tag" Value="PermissionRejected">
                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Setter Property="Opacity" Value="0.4" />
                            <Setter Property="ToolTip" Value="{Binding Path=DataContext.DisabledControlTooltipText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="addBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Source="pack://siteoforigin:,,,/Resources/Add_32px.png" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Add_32px.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="reportViewBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="22"
                        Height="22"
                        VerticalAlignment="Center"
                        Source="pack://siteoforigin:,,,/Resources/view_report_32px.png" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="addBtn_content" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Width="100" Orientation="Horizontal">
                        <Image
                            x:Name="img"
                            Width="24"
                            Height="24"
                            VerticalAlignment="Center"
                            Source="pack://siteoforigin:,,,/Resources/Add_32px.png" />
                        <TextBlock
                            x:Name="tb"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            FontWeight="SemiBold"
                            Foreground="#444455"
                            Text="{TemplateBinding Content}" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Add_32px.png" />
                            <Setter TargetName="tb" Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="editToggBtn" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Image
                        x:Name="img"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Source="pack://siteoforigin:,,,/Resources/Edit_32px.png" />
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Dark_32px.png" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Blue_32px.png" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="copyBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Source="pack://siteoforigin:,,,/Resources/copy_32px.png" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="pasteBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Source="pack://siteoforigin:,,,/Resources/paste_32px.png" />
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Dark_32px.png"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="editBtn" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/edit_32px.png" />
        </Style.Resources>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="20"
                        Height="20"
                        VerticalAlignment="Center"
                        Source="{DynamicResource imgSrc}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="editBtn_hoverable"
        BasedOn="{StaticResource editBtn}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/edit_32px.png" />
        </Style.Resources>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bd"
                        Padding="3,2,3,2"
                        Background="Transparent">
                        <Image
                            x:Name="img"
                            Width="20"
                            Height="20"
                            VerticalAlignment="Center"
                            Source="{DynamicResource imgSrc}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity="0.1" Color="#606060" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="editBtn_gray"
        BasedOn="{StaticResource editBtn}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/edit_gray_32px.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="saveBtn" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/save_32px.png" />
        </Style.Resources>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="20"
                        Height="20"
                        VerticalAlignment="Center"
                        Source="{DynamicResource imgSrc}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="isActiveRecipeBtn" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/toggle_on_32px.png" />
        </Style.Resources>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="20"
                        Height="20"
                        VerticalAlignment="Center"
                        Source="{DynamicResource imgSrc}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style x:Key="integrityCheckBtn" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_integrityChecks.png" />
        </Style.Resources>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="20"
                        Height="20"
                        VerticalAlignment="Center"
                        Source="{DynamicResource imgSrc}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="deleteBtn" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/trash_32px.png" />
        </Style.Resources>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="20"
                        Height="20"
                        VerticalAlignment="Center"
                        Source="{DynamicResource imgSrc}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Trash_Can_DarkRed_32px.png"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="deleteBtn_gray"
        BasedOn="{StaticResource deleteBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/gray_trash_32px.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="deleteBtnWithBorder" TargetType="{x:Type Button}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="Delete" ToolTipService.ShowDuration="12000" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bd"
                        Padding="4,1,4,1"
                        Background="{TemplateBinding Background}">
                        <Button
                            x:Name="btn"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Style="{StaticResource deleteBtn}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource GrayColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="editBtnWithBorder" TargetType="{x:Type Button}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="Rename" ToolTipService.ShowDuration="12000" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bd"
                        Padding="4,1,4,1"
                        Background="{TemplateBinding Background}">
                        <Button
                            x:Name="btn"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Style="{StaticResource editBtn}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource GrayColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="saveBtnWithBorder" TargetType="{x:Type Button}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="Save Changes" ToolTipService.ShowDuration="12000" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bd"
                        Padding="4,1,4,1"
                        Background="{TemplateBinding Background}">
                        <Button
                            x:Name="btn"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Opacity="{TemplateBinding Opacity}"
                            Style="{StaticResource saveBtn}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource GrayColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="isActiveRecipeBtnWithBorder" TargetType="{x:Type Button}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="Active deactivation of the recipe" ToolTipService.ShowDuration="12000" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bd"
                        Padding="4,1,4,1"
                        Background="{TemplateBinding Background}">
                        <Button
                            x:Name="btn"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Opacity="{TemplateBinding Opacity}"
                            Style="{StaticResource isActiveRecipeBtn}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource GrayColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="integrityCheckBtnWithBorder" TargetType="{x:Type Button}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="Integrity Check" ToolTipService.ShowDuration="12000" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bd"
                        Padding="4,1,4,1"
                        Background="{TemplateBinding Background}">
                        <Button
                            x:Name="btn"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Opacity="{TemplateBinding Opacity}"
                            Style="{StaticResource integrityCheckBtn}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource GrayColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sortDownBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Source="pack://siteoforigin:,,,/Resources/Sort_Down_32px.png" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Sort_Down_Dark_32px.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sortUpBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="img"
                        Width="24"
                        Height="24"
                        VerticalAlignment="Center"
                        Source="pack://siteoforigin:,,,/Resources/Sort_Up_32px.png" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Sort_Up_Dark_32px.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="pencilBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox x:Name="viewboxImg" MaxWidth="20">
                        <Image
                            x:Name="checkedImg"
                            Width="20"
                            Height="20"
                            VerticalAlignment="Center"
                            Source="pack://siteoforigin:,,,/Resources/Edit_Pencil_40px.png" />
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Edit_Pencil_DarkBlue_40px.png" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Application exit button  -->
    <Style x:Key="appExitBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="16">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/exit_application.png" />
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Alarm Slience button  -->
    <Style x:Key="alarmSlienceBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="16">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/SlienceHorn.png" />
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Emergency button  -->
    <Style x:Key="appSettingsBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="16">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/bottom_settings.png" />
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  switchFurnacesApplications button  -->
    <Style x:Key="appSwitchFurnacesApplications" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="20">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources//switch_application.png" />

                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Settings button  -->
    <Style x:Key="appEmergencyBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="16">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/app_emergency.png" />
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="helpBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="Help Documentation" ToolTipService.ShowDuration="12000" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="16">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/bottom_help.png" />
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Enter Parts Move to Pre  -->
    <Style x:Key="appEnterPartsMoveToPre" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="32">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="32"
                                Height="32"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/enterparts_move_to_prepare.png" />
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Enter Parts Move to Pre  -->
    <Style x:Key="appEnterPartsCurrentDetail" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox MaxWidth="32">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="32"
                                Height="32"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/search_32px.png" />
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--  Cancel button  -->
    <Style x:Key="cancelBtn" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox x:Name="viewboxImg" MaxWidth="18">
                        <Image
                            x:Name="checkedImg"
                            Width="18"
                            Height="18"
                            Source="pack://siteoforigin:,,,/Resources/Cancel_16px.png" />
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Image size change  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkedImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="22"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkedImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="22"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="viewboxImg"
                                            Storyboard.TargetProperty="(Viewbox.MaxWidth)"
                                            To="22"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Image size change  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkedImg"
                                            Storyboard.TargetProperty="(Image.Width)"
                                            To="18"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkedImg"
                                            Storyboard.TargetProperty="(Image.Height)"
                                            To="18"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="viewboxImg"
                                            Storyboard.TargetProperty="(Viewbox.MaxWidth)"
                                            To="18"
                                            Duration="0:0:0.1" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="checkedImg" Property="Image.Source" Value="pack://siteoforigin:,,,/Resources/Cancel_Red_16px.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  General button  -->
    <Style x:Key="genBtn" TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Plus_40px.png" />
        </Style.Resources>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{StaticResource MainBlueColor}"
                        BorderBrush="Black"
                        BorderThickness="0.6"
                        CornerRadius="0">
                        <StackPanel
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Image
                                Width="16"
                                Height="16"
                                Margin="2,0,0,0"
                                Source="{DynamicResource imgSrc}" />
                            <TextBlock
                                x:Name="label"
                                Margin="5,0,0,0"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="Medium"
                                Foreground="{StaticResource GeneralWhite}"
                                Text="{TemplateBinding Content}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource CustomYellowColor}" />
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource MainBlueColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  General button  -->
    <Style x:Key="genBtnRunOp" TargetType="Button">
        <Style.Resources>
            <!--<BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Plus_16px.png"/>-->
            <SolidColorBrush x:Key="bgColor" Color="#326690" />
            <!--  Main Blue Color  -->
            <SolidColorBrush x:Key="bgColorOnHover" Color="#E8C876" />
            <!--  Custom Yellow Color  -->
            <SolidColorBrush x:Key="fgColor" Color="#f1f1f1" />
            <!--  Custom Yellow Color  -->
            <SolidColorBrush x:Key="fgColorOnHover" Color="#326690" />
            <!--  Main Blue Color  -->
        </Style.Resources>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource bgColor}"
                        BorderBrush="Black"
                        BorderThickness="1"
                        CornerRadius="0">
                        <StackPanel
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Viewbox MaxWidth="16">
                                <Image Margin="7,5,0,5" Source="{DynamicResource imgSrc}" />
                            </Viewbox>
                            <TextBlock
                                x:Name="textBlock"
                                Margin="5,5,0,5"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                Foreground="{DynamicResource fgColor}"
                                Text="{TemplateBinding Content}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CustomBlackColor}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorOnHover}" />
                            <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource fgColorOnHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  General button with no image  -->
    <Style x:Key="genBtn_noImg" TargetType="Button">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#D6D6D6" />
            <!--  SkyGrayColor  -->
            <SolidColorBrush x:Key="bgColorOnHover" Color="#DEDEDE" />
            <SolidColorBrush x:Key="fgColor" Color="#606060" />
            <SolidColorBrush x:Key="fgColorOnHover" Color="#303030" />
        </Style.Resources>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource bgColor}"
                        BorderBrush="{StaticResource CustomPassiveBlackColor}"
                        BorderThickness="0.6"
                        CornerRadius="0">
                        <TextBlock
                            x:Name="textBlock"
                            Margin="2,0,2,0"
                            Padding="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="Medium"
                            Foreground="{DynamicResource fgColor}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorOnHover}" />
                            <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource fgColorOnHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="genBtn_red_noImg"
        BasedOn="{StaticResource genBtn_noImg}"
        TargetType="Button">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#326690" />
            <!--  RedColor  -->
            <SolidColorBrush x:Key="bgColorOnHover" Color="#BC0201" />
            <!--  DarkRedColor  -->
            <SolidColorBrush x:Key="fgColor" Color="#F1F1F1" />
            <SolidColorBrush x:Key="fgColorOnHover" Color="White" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_plus"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Plus_16px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_trash"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Trash Can_16px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_upArrow"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Slide Up_16px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_downArrow"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Down Button_16px.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="genBtn_end" TargetType="Button">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{StaticResource MainBlueColor}"
                        BorderBrush="Black"
                        BorderThickness="0.6"
                        CornerRadius="0">
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                            <Image
                                Width="24"
                                Height="24"
                                Margin="7,0,0,0"
                                Source="pack://siteoforigin:,,,/Resources/End_32px.png" />
                            <Label
                                x:Name="label"
                                Margin="5,0,0,0"
                                Content="{TemplateBinding Content}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="Medium"
                                Foreground="{StaticResource GeneralWhite}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource CustomYellowColor}" />
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource MainBlueColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="genBtn_report"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Analyze_16px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_remove"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Cancel_16px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_upwardArrow"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Upward Arrow_16px1.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_decrease"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Decrease_16px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_stop"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/runoperation_stop.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_availableUpd"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Available Updates_16px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_play"
        BasedOn="{StaticResource genBtn}"
        TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Circled Play_32px.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtnRunOp_rightArrow"
        BasedOn="{StaticResource genBtnRunOp}"
        TargetType="Button">
        <!--<Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/main_menu_start.png"/>
        </Style.Resources>-->
    </Style>

    <Style
        x:Key="genBtnRunOp_leftArrow"
        BasedOn="{StaticResource genBtnRunOp}"
        TargetType="Button">
        <!--<Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Back To_16px.png"/>
        </Style.Resources>-->
    </Style>

    <Style
        x:Key="genBtnRunOp_pause"
        BasedOn="{StaticResource genBtnRunOp}"
        TargetType="Button">
        <!--<Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Pause Button_16px.png"/>
        </Style.Resources>-->
    </Style>

    <Style
        x:Key="genBtnRunOp_stop"
        BasedOn="{StaticResource genBtnRunOp}"
        TargetType="Button">
        <Style.Resources>
            <!--<BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Stop_32px.png"/>-->
            <SolidColorBrush x:Key="bgColor" Color="#326690" />
            <SolidColorBrush x:Key="bgColorOnHover" Color="#BC0201" />
            <SolidColorBrush x:Key="fgColor" Color="#f1f1f1" />
            <SolidColorBrush x:Key="fgColorOnHover" Color="White" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="genBtn_password"
        BasedOn="{StaticResource genBtnRunOp}"
        TargetType="Button">
        <!--<Style.Resources>
            <BitmapImage x:Key="imgSrc" UriSource="pack://siteoforigin:,,,/Resources/Password_Key_40px.png"/>
        </Style.Resources>-->
    </Style>

    <Style
        x:Key="genBtn_save"
        BasedOn="{StaticResource genBtnRunOp}"
        TargetType="Button">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#326690" />
            <!--  Main Blue Color  -->
            <SolidColorBrush x:Key="bgColorOnHover" Color="#E8C876" />
            <!--  Custom Yellow Color  -->
            <SolidColorBrush x:Key="fgColor" Color="#f1f1f1" />
            <!--  Custom Yellow Color  -->
            <SolidColorBrush x:Key="fgColorOnHover" Color="#326690" />
            <!--  Main Blue Color  -->
        </Style.Resources>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource bgColor}"
                        BorderBrush="Black"
                        BorderThickness="1"
                        CornerRadius="0">
                        <StackPanel
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Viewbox MaxWidth="24">
                                <Image Margin="7,5,0,5" Source="pack://siteoforigin:,,,/Resources/Save_40px.png" />
                            </Viewbox>
                            <TextBlock
                                x:Name="textBlock"
                                Margin="5,5,0,5"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                Foreground="{DynamicResource fgColor}"
                                Text="{TemplateBinding Content}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CustomBlackColor}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorOnHover}" />
                            <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource fgColorOnHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  General Toggle Button  -->
    <Style x:Key="GenToggleButton" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#F0F0F0" />
            <SolidColorBrush x:Key="bgColorHover" Color="#DEDEDE" />
            <SolidColorBrush x:Key="bgColorSelected" Color="#326690" />
            <SolidColorBrush x:Key="fgColor" Color="#303030" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource bgColor}"
                        BorderBrush="{StaticResource DarkGrayColor}"
                        BorderThickness="1"
                        CornerRadius="0">
                        <Label
                            x:Name="label"
                            Padding="5,0,5,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="SemiBold"
                            Foreground="{DynamicResource fgColor}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorHover}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CustomPassiveBlackColor}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource GeneralWhite}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GenToggleButton_Disabled" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#F0F0F0" />
            <SolidColorBrush x:Key="bgColorHover" Color="#DEDEDE" />
            <SolidColorBrush x:Key="bgColorSelected" Color="#326690" />
            <SolidColorBrush x:Key="fgColor" Color="#303030" />
        </Style.Resources>
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource bgColor}"
                        BorderBrush="{StaticResource CreamColorOnHover}"
                        BorderThickness="1,0,1,0"
                        CornerRadius="0">
                        <Label
                            x:Name="label"
                            Padding="5,0,5,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="SemiBold"
                            Foreground="{DynamicResource fgColor}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorHover}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainBlueColor}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource GeneralWhite}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GenToggleButton_MainBlue" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="border"
                        Background="#326690"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="1">
                        <Viewbox>
                            <Label
                                x:Name="label"
                                Padding="5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                Foreground="#F0F0F0" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#4D648D" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CreamColor}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1,0,1,0" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource CreamColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GenToggleButton_EnableDisable" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#326690" />
            <!--  MainBlueColor  -->
            <SolidColorBrush x:Key="bgColorOnHover" Color="#E8C876" />
            <!--  CustomYellowColor  -->
            <SolidColorBrush x:Key="fgColor" Color="#F1F1F1" />
            <SolidColorBrush x:Key="fgColorOnHover" Color="#326690" />
            <!--  MainBlueColor  -->
        </Style.Resources>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource bgColor}"
                        BorderBrush="{StaticResource CustomBlackColor}"
                        BorderThickness="1"
                        CornerRadius="0">
                        <TextBlock
                            x:Name="textBlock"
                            Margin="2,0,2,0"
                            Padding="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="Medium"
                            Foreground="{DynamicResource fgColor}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bgColorOnHover}" />
                            <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource fgColorOnHover}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GenToggleButton_FanEnable"
        BasedOn="{StaticResource GenToggleButton_EnableDisable}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="85" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Fan Enable" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="Fan Disable" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GenToggleButton_HeatEnable"
        BasedOn="{StaticResource GenToggleButton_EnableDisable}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="85" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Heat Enable" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="Heat Disable" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GenToggleButton_CoolEnable"
        BasedOn="{StaticResource GenToggleButton_EnableDisable}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="85" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Cool Enable" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="Cool Disable" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GenToggleButton_VacuumEnable"
        BasedOn="{StaticResource GenToggleButton_EnableDisable}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="120" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Vacuum Enable" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="Vacuum Disable" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GenToggleButton_PressureEnable"
        BasedOn="{StaticResource GenToggleButton_EnableDisable}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="120" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Pressure Enable" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="Pressure Disable" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GenToggleButton_MainBlue_Ver" TargetType="{x:Type ToggleButton}">
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="border"
                        Background="#326690"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="1">
                        <Viewbox>
                            <Label
                                x:Name="label"
                                Margin="5,0,5,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource GeneralWhite}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.2"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="border" Property="Background" Value="#4D648D" />
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="label" Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource CreamColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="GenToggleButton_LightBlue"
        BasedOn="{StaticResource GenToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#f0f0f0" />
            <SolidColorBrush x:Key="bgColorHover" Color="#CFDCE8" />
            <SolidColorBrush x:Key="fgColor" Color="#303030" />
            <SolidColorBrush x:Key="bgColorSelected" Color="#326690" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="GenToggleButton_LightYellow"
        BasedOn="{StaticResource GenToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#F1F5D4" />
            <SolidColorBrush x:Key="bgColorHover" Color="#EAEDCE" />
            <SolidColorBrush x:Key="fgColor" Color="#303030" />
            <SolidColorBrush x:Key="bgColorSelected" Color="#326690" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="GenToggleButton_LightYellowDisabled"
        BasedOn="{StaticResource GenToggleButton_Disabled}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#F1F5D4" />
            <SolidColorBrush x:Key="bgColorHover" Color="#EAEDCE" />
            <SolidColorBrush x:Key="fgColor" Color="#303030" />
            <SolidColorBrush x:Key="bgColorSelected" Color="#326690" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="GenToggleButton_PassiveBlack"
        BasedOn="{StaticResource GenToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <SolidColorBrush x:Key="bgColor" Color="#f0f0f0" />
            <SolidColorBrush x:Key="bgColorHover" Color="#DEDEDE" />
            <SolidColorBrush x:Key="fgColor" Color="#303030" />
            <SolidColorBrush x:Key="bgColorSelected" Color="#606060" />
        </Style.Resources>
    </Style>

    <!--  Run Operation Start Run Button  -->
    <Style x:Key="TogBtn_startRun" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="#326690"
                        BorderBrush="#326690"
                        BorderThickness="1"
                        CornerRadius="0">
                        <StackPanel
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Image
                                x:Name="img"
                                Width="32"
                                Height="32"
                                Margin="7,0,-2,0"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/Play_32px.png" />
                            <TextBlock
                                x:Name="textblock"
                                Margin="5,5,0,5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                Text="{TemplateBinding Content}"
                                TextWrapping="Wrap">
                                <TextBlock.Foreground>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                        <GradientStop Offset="0" Color="#F1F1F1" />
                                        <GradientStop Offset="0" Color="#88F000" />
                                    </LinearGradientBrush>
                                </TextBlock.Foreground>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#326690" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="1"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="Foreground.GradientStops[0].Offset"
                                            From="0"
                                            To="3.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="Foreground.GradientStops[0].Offset"
                                            To="0.05"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="textAnimation">
                                        <StringAnimationUsingKeyFrames
                                            AutoReverse="False"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="Text">
                                            <DiscreteStringKeyFrame KeyTime="0:0:0" Value="Processing." />
                                            <DiscreteStringKeyFrame KeyTime="0:0:0.5" Value="Processing.." />
                                            <DiscreteStringKeyFrame KeyTime="0:0:1" Value="Processing..." />
                                            <DiscreteStringKeyFrame KeyTime="0:0:1.5" Value="" />
                                        </StringAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <StringAnimationUsingKeyFrames
                                            AutoReverse="False"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="Text">
                                            <DiscreteStringKeyFrame KeyTime="0:0:0" Value="Start Run" />
                                        </StringAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter TargetName="textblock" Property="Margin" Value="2,5,15,5" />
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/Pause_16px.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TogBtn_activeHold" TargetType="ToggleButton">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="border"
                        Background="{StaticResource MainBlueColor}"
                        BorderBrush="Black"
                        BorderThickness="1"
                        CornerRadius="0">
                        <StackPanel
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <Viewbox MaxWidth="16">
                                <Image
                                    x:Name="img"
                                    Margin="7,5,0,5"
                                    Source="pack://siteoforigin:,,,/Resources/Pause_16px.png" />
                            </Viewbox>
                            <TextBlock
                                x:Name="txtblock"
                                Margin="5,5,0,5"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource GeneralWhite}"
                                Text="{TemplateBinding Content}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RedColor}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/Play_16px.png"/>
                            <Setter TargetName="txtblock" Property="Text" Value="Continue Process"/>
                            <Setter TargetName="txtblock" Property="Foreground" Value="{StaticResource CustomBlackColor}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SystemGreenColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CustomBlackColor}"/>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/Play_16px.png" />
                            <Setter TargetName="txtblock" Property="Text" Value="Continue Process" />
                            <Setter TargetName="border" Property="Background" Value="#FFA500" />
                            <!--<Setter TargetName="border" Property="Background" Value="#2CBF00"/>
                            <Setter TargetName="txtblock" Property="Foreground" Value="{StaticResource CustomBlackColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CustomBlackColor}"/>-->
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Autoclave Arrow Button  -->
    <Style x:Key="AutoclaveArrowBtn" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image x:Name="img" Source="pack://siteoforigin:,,,/Resources/chevron_right_128px.png" />
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="1"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.5"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Cursor" Value="Hand" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Autoclave Arrow Button With Border  -->
    <Style x:Key="AutoclaveArrowBtnBd" TargetType="{x:Type Button}">
        <Style.Resources>
            <sys:Double x:Key="angleVal">0</sys:Double>
        </Style.Resources>
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource MainBlueColor}"
                        BorderThickness="2">
                        <Viewbox>
                            <StackPanel>
                                <Image
                                    x:Name="img"
                                    Width="64"
                                    Height="64"
                                    RenderTransformOrigin="0.5, 0.5"
                                    Source="pack://siteoforigin:,,,/Resources/chevron_right_128px.png">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="{DynamicResource angleVal}" />
                                    </Image.RenderTransform>
                                </Image>
                                <TextBlock
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="22"
                                    FontWeight="Black"
                                    Foreground="{StaticResource MainBlueColor}"
                                    Text="{TemplateBinding Content}" />
                            </StackPanel>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="1"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.5"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Cursor" Value="Hand" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="AutoclaveArrowBtnBd_Front"
        BasedOn="{StaticResource AutoclaveArrowBtnBd}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <sys:Double x:Key="angleVal">-45</sys:Double>
        </Style.Resources>
    </Style>

    <Style
        x:Key="AutoclaveArrowBtnBd_Up"
        BasedOn="{StaticResource AutoclaveArrowBtnBd}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <sys:Double x:Key="angleVal">-90</sys:Double>
        </Style.Resources>
    </Style>

    <Style
        x:Key="AutoclaveArrowBtnBd_Back"
        BasedOn="{StaticResource AutoclaveArrowBtnBd}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <sys:Double x:Key="angleVal">-135</sys:Double>
        </Style.Resources>
    </Style>

    <Style
        x:Key="AutoclaveArrowBtnBd_Left"
        BasedOn="{StaticResource AutoclaveArrowBtnBd}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <sys:Double x:Key="angleVal">180</sys:Double>
        </Style.Resources>
    </Style>

    <Style
        x:Key="AutoclaveArrowBtnBd_Down"
        BasedOn="{StaticResource AutoclaveArrowBtnBd}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <sys:Double x:Key="angleVal">90</sys:Double>
        </Style.Resources>
    </Style>

    <Style
        x:Key="RightNavBtn"
        BasedOn="{StaticResource genBtn_noImg}"
        TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Content" Value="&#xEDDA;" />
    </Style>

    <Style
        x:Key="LeftNavBtn"
        BasedOn="{StaticResource genBtn_noImg}"
        TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Content" Value="&#xEDD9;" />
    </Style>


    <Style x:Key="ActiveRecipeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SkyGrayColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource SkyGrayColor}" />
        <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2">
                        <TextBlock
                            x:Name="textblock"
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="Bold"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Resources>
                        <converters:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter" />
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=textblock, Path=Text, Converter={StaticResource IsNullOrEmptyConverter}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            From="#D6D6D6"
                                            To="#ebebeb"
                                            Duration="0:0:1.75" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding ElementName=textblock, Path=Text, Converter={StaticResource IsNullOrEmptyConverter}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Cursor" Value="Hand" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sensorViewBagFilterButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Viewbox MaxWidth="16">
                        <Border Background="Transparent">
                            <Image
                                x:Name="img"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="pack://siteoforigin:,,,/Resources/filter_32px.png" />
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/filter_Light_32px.png" />
                            <Setter Property="Cursor" Value="Hand" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="ToggleButton.IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/filter_DarkBlue_32px.png" />
                            <Setter Property="Cursor" Value="Hand" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="ToggleButton.IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/filter_Blue_32px.png" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/filter_32px.png" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ptcPortsVisibilityBtn_show" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Width" Value="90" />
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource LightGrayColor}"
                        BorderBrush="{StaticResource Sensor_Gray}"
                        BorderThickness="2">
                        <TextBlock
                            x:Name="textblock"
                            Margin="5,2,5,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{StaticResource CustomBlackColor}"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsShowPTCPortsBtnVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="0"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="50"
                                            Duration="0:0:0.3" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>


                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#F0F0F0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#333333"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#ebebeb"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#303030"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.7"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ptcPortsVisibilityBtn_hide" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Width" Value="90" />
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource LightGrayColor}"
                        BorderBrush="{StaticResource Sensor_Gray}"
                        BorderThickness="2">
                        <TextBlock
                            x:Name="textblock"
                            Margin="5,2,5,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{StaticResource CustomBlackColor}"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsHidePTCPortsBtnVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="0"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)"
                                            To="50"
                                            Duration="0:0:0.3" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#F0F0F0"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#333333"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#ebebeb"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetName="textblock"
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#303030"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.7"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="changeUserBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource LightGrayColor}" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock
                        x:Name="tb"
                        Margin="0,2,5,2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="{TemplateBinding FontSize}"
                        FontWeight="SemiBold"
                        Foreground="{TemplateBinding Foreground}"
                        Text="{TemplateBinding Content}"
                        TextAlignment="Center" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="tb" Property="FontWeight" Value="Bold" />
                            <Setter TargetName="tb" Property="TextDecorations" Value="Underline" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.FullPrimaryScreenWidth}}" Value="800">
                <Setter Property="FontSize" Value="9" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="changeUserBtn_underlined" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource LightGrayColor}" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock
                        x:Name="tb"
                        Margin="0,2,5,2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontSize="{TemplateBinding FontSize}"
                        FontWeight="Regular"
                        Foreground="{TemplateBinding Foreground}"
                        Text="{TemplateBinding Content}"
                        TextAlignment="Left"
                        TextDecorations="Underline" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontSize" Value="12.5" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.FullPrimaryScreenWidth}}" Value="800">
                <Setter Property="FontSize" Value="9" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="eyeBtn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bd"
                        Padding="2,1,2,1"
                        Background="Transparent">
                        <Image
                            x:Name="img"
                            Width="24"
                            Height="24"
                            Source="pack://siteoforigin:,,,/Resources/eye_invisible_32px.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity="0.1" Color="#606060" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="img" Property="Source" Value="pack://siteoforigin:,,,/Resources/eye_visible_32px.png" />
                            <Setter Property="Tag" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="pipingAndInstrumentExitBtn" TargetType="Button">
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Opacity" Value="0.4" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{StaticResource CustomPassiveBlackColor}"
                        BorderBrush="{StaticResource CustomBlackColor}"
                        BorderThickness="0.6"
                        CornerRadius="0">
                        <TextBlock
                            x:Name="text"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource GeneralWhite}"
                            Text="EXIT" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource CustomBlackColor}" />
                            <Setter Property="Opacity" Value="1" />
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource GeneralWhite}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Width"
                                            To="55"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Height"
                                            To="40"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="FontSize"
                                            To="17"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.4"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Width"
                                            To="45"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Height"
                                            To="30"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="FontSize"
                                            To="16"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="imgBasedToggleBtn" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_red.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7.5*" />
                                <ColumnDefinition Width="2.5*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2.5*" />
                                <RowDefinition Height="7.5*" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.RowSpan="2">
                                <Image
                                    x:Name="img"
                                    Width="{TemplateBinding MinWidth}"
                                    Height="{TemplateBinding MinHeight}"
                                    Source="{DynamicResource imgUnchecked}" />
                                <TextBlock
                                    Margin="0,0,0,10"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource CustomBlackColor}"
                                    Text="{TemplateBinding Content}" />
                            </StackPanel>
                            <!--<Border
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                Background="{StaticResource pAndIBlue}"
                                BorderBrush="{StaticResource CustomBlackColor}"
                                BorderThickness="1">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="11"
                                    FontWeight="SemiBold"
                                    Foreground="{StaticResource GeneralWhite}"
                                    Text="A" />
                            </Border>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgUnchecked}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="valveWithActuatorBtn"
        BasedOn="{StaticResource imgBasedToggleBtn}"
        TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <!--<BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator.png" />-->
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator_gray.png" />
            <!--<BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator_red.png" />-->
        </Style.Resources>
    </Style>



    <Style x:Key="imgBasedOnOffValveControlBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator_gray.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                        <!--<Border
                            Grid.Column="1"
                            Width="16"
                            Height="16"
                            Background="{StaticResource pAndIBlue}"
                            BorderBrush="{StaticResource CustomBlackColor}"
                            BorderThickness="1">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="11"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource GeneralWhite}"
                                Text="A" />
                        </Border>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 OFF - 1 ON - 2 ALARM  -->
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGray}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGreen}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="2">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgRed}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            AutoReverse="True"
                                            DecelerationRatio="0.2"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            DecelerationRatio="0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="onOffValveWithActuatorBtn"
        BasedOn="{StaticResource imgBasedOnOffValveControlBase}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator_gray.png" />

        </Style.Resources>
    </Style>




    <Style x:Key="imgBasedPanelStatusControlBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator_gray.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="117" />
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="Width" Value="117" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 OFF - 1 ON  -->
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGray}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGreen}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="panelStatusBtn"
        BasedOn="{StaticResource imgBasedPanelStatusControlBase}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/Control_cabinet_01_gray.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/Control_cabinet_01_green.png" />

        </Style.Resources>
    </Style>




    <Style x:Key="imgBasedProportionalValveControlBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_green.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_red.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_gray.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                        <!--<Border
                            Grid.Column="1"
                            Width="16"
                            Height="16"
                            Background="{StaticResource pAndIBlue}"
                            BorderBrush="{StaticResource CustomBlackColor}"
                            BorderThickness="1">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="11"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource GeneralWhite}"
                                Text="A" />
                        </Border>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 OFF - 1 ON - 2 ALARM  -->
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGray}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGreen}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="2">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgRed}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            AutoReverse="True"
                                            DecelerationRatio="0.2"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            DecelerationRatio="0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="proportionalValveBtn"
        BasedOn="{StaticResource imgBasedProportionalValveControlBase}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_gray.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_red.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="imgBasedOnOffPumpControlBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/Horizontal_pump_right_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/Horizontal_pump_right_gray.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                        <!--<Border
                            Grid.Column="1"
                            Width="16"
                            Height="16"
                            Background="{StaticResource pAndIBlue}"
                            BorderBrush="{StaticResource CustomBlackColor}"
                            BorderThickness="1">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="11"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource GeneralWhite}"
                                Text="A" />
                        </Border>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 OFF - 1 ON - 2 ALARM  -->
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGray}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGreen}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="2">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgRed}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            AutoReverse="True"
                                            DecelerationRatio="0.2"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            DecelerationRatio="0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="onOffPumpWithActuatorBtn"
        BasedOn="{StaticResource imgBasedOnOffPumpControlBase}"
        TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="MinHeight" Value="64" />
        <Setter Property="Width" Value="96" />
        <Setter Property="Height" Value="96" />
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/Horizontal_pump_right_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/Horizontal_pump_right_gray.png" />

        </Style.Resources>
    </Style>


    <Style
        x:Key="valveBtn"
        BasedOn="{StaticResource imgBasedToggleBtn}"
        TargetType="{x:Type ToggleButton}" />

    <Style x:Key="chillerBtn" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/chiller_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/chiller_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/chiller_red.png" />
        </Style.Resources>
        <Setter Property="Width" Value="112" />
        <Setter Property="Height" Value="112" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border">
                        <Grid>
                            <TextBlock
                                Margin="0,10,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Panel.ZIndex="10"
                                FontSize="15"
                                FontWeight="Bold"
                                Foreground="{TemplateBinding Foreground}"
                                Text="ÇİLLER" />
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Source="{DynamicResource imgUnchecked}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgUnchecked}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="vacuumPumpBtn"
        BasedOn="{StaticResource imgBasedToggleBtn}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="Width" Value="76" />
        <Setter Property="Height" Value="76" />
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/Vacuum_pump_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/Vacuum_pump_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/Vacuum_pump_red.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="gateValveBtn" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Gate_valve_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Gate_valve_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/3-D_Gate_valve_red.png" />
        </Style.Resources>
        <Setter Property="Width" Value="96" />
        <Setter Property="Height" Value="72" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border">
                        <StackPanel Orientation="Horizontal">
                            <Image
                                x:Name="img"
                                Width="48"
                                Height="48"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="-10,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgUnchecked}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="horPumpBtn"
        BasedOn="{StaticResource imgBasedToggleBtn}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="MinHeight" Value="64" />
        <Setter Property="Width" Value="96" />
        <Setter Property="Height" Value="96" />
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/Horizontal_pump_right_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/Horizontal_pump_right_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/Horizontal_pump_right_red.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="pressureSwBtn" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Target_type_sensor_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Target_type_sensor_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/3-D_Target_type_sensor_red.png" />
        </Style.Resources>
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Image
                        x:Name="img"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Source="{DynamicResource imgUnchecked}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgUnchecked}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="coolingTowerMotorBtn"
        BasedOn="{StaticResource imgBasedToggleBtn}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="MinHeight" Value="64" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="80" />
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/Pneumatic_brake_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/Pneumatic_brake_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/Pneumatic_brake_red.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="furnaceMotorBtn"
        BasedOn="{StaticResource imgBasedToggleBtn}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="Width" Value="96" />
        <Setter Property="Height" Value="96" />
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_red.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="panelBtn" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/Control_cabinet_01_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/Control_cabinet_01_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/Control_cabinet_01_red.png" />
        </Style.Resources>
        <Setter Property="Width" Value="112" />
        <Setter Property="Height" Value="112" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border">
                        <StackPanel>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                            <Image
                                x:Name="img"
                                Width="92"
                                Height="92"
                                Source="{DynamicResource imgUnchecked}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgChecked}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgUnchecked}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="htrBtn"
        BasedOn="{StaticResource imgBasedToggleBtn}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="56" />
        <Setter Property="MinHeight" Value="56" />
        <Setter Property="Width" Value="72" />
        <Setter Property="Height" Value="72" />
        <Style.Resources>
            <BitmapImage x:Key="imgChecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_green.png" />
            <BitmapImage x:Key="imgUnchecked" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_gray.png" />
            <BitmapImage x:Key="imgDisabled" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_red.png" />
        </Style.Resources>
    </Style>


    <Style x:Key="imgBasedHeaterControlBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_gray.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_red.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                        <!--<Border
                            Grid.Column="1"
                            Width="16"
                            Height="16"
                            Background="{StaticResource pAndIBlue}"
                            BorderBrush="{StaticResource CustomBlackColor}"
                            BorderThickness="1">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="11"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource GeneralWhite}"
                                Text="A" />
                        </Border>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 OFF - 1 ON - 2 ALARM  -->
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGray}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGreen}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="2">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgRed}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            AutoReverse="True"
                                            DecelerationRatio="0.2"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            DecelerationRatio="0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="onOffHeaterBtn"
        BasedOn="{StaticResource imgBasedHeaterControlBase}"
        TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="56" />
        <Setter Property="MinHeight" Value="56" />
        <Setter Property="Width" Value="72" />
        <Setter Property="Height" Value="72" />
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_gray.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/3-D_Finned_exchanger_red.png" />
        </Style.Resources>
    </Style>



    <Style
        x:Key="furnaceFanBtn"
        BasedOn="{StaticResource imgBasedHeaterControlBase}"
        TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="Width" Value="96" />
        <Setter Property="Height" Value="96" />
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_gray.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_red.png" />
        </Style.Resources>
    </Style>

    <Style
        x:Key="vacuumPumpStatus"
        BasedOn="{StaticResource imgBasedHeaterControlBase}"
        TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="Width" Value="76" />
        <Setter Property="Height" Value="76" />
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_gray.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/Motor_01_red.png" />
        </Style.Resources>
    </Style>


    <Style
        x:Key="furnaceGeneralSwitchStatus"
        BasedOn="{StaticResource imgBasedOnOffValveControlBase}"
        TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="32" />
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/check_mark_24px.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/cross_mark_24px.png" />
        </Style.Resources>
    </Style>




    <Style x:Key="imgBasedleftArrowControlBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/arrow1Green32px.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/arrowRed32px.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 Off - 1 On  -->

                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGreen}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgRed}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            AutoReverse="True"
                                            DecelerationRatio="0.2"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            DecelerationRatio="0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style
        x:Key="leftArrowStatus"
        BasedOn="{StaticResource imgBasedleftArrowControlBase}"
        TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="32" />
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/arrow1Green32px.png" />
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/arrowRed32px.png" />
        </Style.Resources>
    </Style>



    <Style x:Key="imgHumanControlBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/standing_man_64px.png" />
        </Style.Resources>
        <Setter Property="MinWidth" Value="48" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 OFF - 1 ON - 2 ALARM  -->
                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgRed}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            AutoReverse="True"
                                            DecelerationRatio="0.2"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            DecelerationRatio="0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style
        x:Key="humanSwitchStatus"
        BasedOn="{StaticResource imgHumanControlBase}"
        TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgRed" UriSource="pack://siteoforigin:,,,/Resources/standing_man_64px.png" />
        </Style.Resources>
    </Style>

    <Style x:Key="imgBasedPressureSwitchBase" TargetType="{x:Type Button}">
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Valve_with_actuator_gray.png" />
        </Style.Resources>
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*" />
                            <ColumnDefinition Width="2.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2.5*" />
                            <RowDefinition Height="7.5*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.RowSpan="2">
                            <Image
                                x:Name="img"
                                Width="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding MinHeight}"
                                Source="{DynamicResource imgUnchecked}" />
                            <TextBlock
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource CustomBlackColor}"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  0 OFF - 1 ON - 2 ALARM  -->
                        <Trigger Property="Tag" Value="0">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGray}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="1">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgGreen}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="2">
                            <Setter TargetName="img" Property="Source" Value="{DynamicResource imgRed}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            AutoReverse="True"
                                            DecelerationRatio="0.2"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            AccelerationRatio="0.8"
                                            DecelerationRatio="0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.1"
                                            To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="pressureSwitchStatus"
        BasedOn="{StaticResource imgBasedPressureSwitchBase}"
        TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="32" />
        <Style.Resources>
            <BitmapImage x:Key="imgGreen" UriSource="pack://siteoforigin:,,,/Resources/3-D_Target_type_sensor_green.png" />
            <BitmapImage x:Key="imgGray" UriSource="pack://siteoforigin:,,,/Resources/3-D_Target_type_sensor_gray.png" />
        </Style.Resources>
    </Style>




</ResourceDictionary>