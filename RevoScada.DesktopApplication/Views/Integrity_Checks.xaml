<UserControl
    x:Class="RevoScada.DesktopApplication.Views.Integrity_Checks"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:RevoScada.DesktopApplication.Converters"
    xmlns:ctrl="clr-namespace:RevoScada.DesktopApplication.Helpers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:itemViews="clr-namespace:RevoScada.DesktopApplication.Views.ItemViews"
    xmlns:local="clr-namespace:RevoScada.DesktopApplication.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="1080"
    d:DesignWidth="1920"
    Background="{StaticResource MainWindowLight}"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:BoolToOppositeVisibility x:Key="BoolToOppositeVisibility" />
        <converters:BooleanAndConverter x:Key="BooleanAndConverter" />
        <converters:BoolToPermissionTagValue x:Key="BoolToPermissionTagValue" />
        <converters:FloatToDigitFloat x:Key="FloatToDigitFloat"/>
        <converters:FloatToDigitFloatPTC x:Key="FloatToDigitFloatPTC"/>
        
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style x:Key="readOnlyTb" TargetType="{x:Type TextBox}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="MinWidth" Value="175" />
            <Setter Property="MinHeight" Value="35" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="{StaticResource MainBlueColor}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="Cursor" Value="Arrow" />
        </Style>

        <Style
            x:Key="tbContent"
            BasedOn="{StaticResource whiteTextBox}"
            TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="MinWidth" Value="175" />
            <Setter Property="MinHeight" Value="35" />
        </Style>
        <Style
            x:Key="customTextbox"
            BasedOn="{StaticResource whiteTextBox}"
            TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="MinHeight" Value="30" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid Loaded="Grid_Loaded">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25*" />
                <ColumnDefinition Width="75*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="5*" />
                <RowDefinition Height="17*" />
                <RowDefinition Height="15*" />
                <RowDefinition Height="17*" />
                <RowDefinition Height="41*" />
                <RowDefinition Height="5*" />
            </Grid.RowDefinitions>

            <DockPanel Grid.RowSpan="2">
                <!--#region Batch and Recipe Name Section-->
                <!--<StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Background="{StaticResource LightGrayColor}"
                        Margin="0 0 0 10">-->

                <!--</StackPanel>-->
                <!--#endregion-->

                <!--#region Leakage Test Failure Section-->
                <Border
                    x:Name="leakageTestBd"
                    Grid.Row="1"
                    Margin="0,0,0,1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.25*" />
                            <RowDefinition Height="0.075*" />
                            <RowDefinition Height="0.25*" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border
                            Background="{StaticResource LightGrayColor}"
                            BorderBrush="{StaticResource CustomBlackColor}"
                            BorderThickness="1">
                            <Viewbox Height="22" HorizontalAlignment="Left">
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <TextBlock
                                        Margin="10,0,7,0"
                                        FontSize="16"
                                        Foreground="{StaticResource CustomBlackColor}"
                                        Text="Batch Name:" />
                                    <TextBlock
                                        Margin="0,0,10,0"
                                        FontSize="16"
                                        Text="{Binding BatchName, TargetNullValue=No Batch, FallbackValue=No Batch}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{StaticResource MainBlueColor}" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="FontSize" Value="21" />
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="No Batch">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock
                                        Margin="10,0,7,0"
                                        FontSize="16"
                                        Foreground="{StaticResource CustomBlackColor}"
                                        Text="Recipe Name:" />
                                    <TextBlock
                                        Margin="0,0,10,3"
                                        FontSize="16"
                                        Text="{Binding AbbreviatedRecipeName, TargetNullValue=No Recipe, FallbackValue=No Recipe}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="ToolTip">
                                                    <Setter.Value>
                                                        <ToolTip Content="{Binding FullRecipeName}" ToolTipService.ShowDuration="12000" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Foreground" Value="{StaticResource MainBlueColor}" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="FontSize" Value="21" />
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="No Recipe">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomPassiveBlackColor}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <!--#region Leakage Test Title-->
                        <Border
                            Grid.Row="2"
                            BorderThickness="1"
                            Style="{StaticResource standardHeaderBorder}">
                            <Viewbox>
                                <Label
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="Leakage Test Failure Criteria"
                                    FontSize="24"
                                    FontWeight="Bold"
                                    Foreground="{StaticResource CustomBlackColor}" />
                            </Viewbox>
                        </Border>
                        <!--#endregion-->

                        <Border
                            Grid.Row="3"
                            Background="{StaticResource LightGrayColor}"
                            BorderBrush="{StaticResource CustomBlackColor}"
                            BorderThickness="1,0,1,0">
                            <Grid
                                MaxHeight="160"
                                Margin="0,0,0,10"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                                <Viewbox Margin="5,0,0,0">
                                    <StackPanel>
                                        <!--#region Test Value Section-->
                                        <StackPanel
                                            Margin="5,10,0,15"
                                            HorizontalAlignment="Left"
                                            Orientation="Horizontal">
                                            <TextBlock Width="140" Text="Test Value" />
                                            <TextBox
                                                x:Name="testValTextBox"
                                                Margin="5,0,0,0"
                                                IsEnabled="{Binding IsCriteriaTestValueBtnEnabled}"
                                                KeyDown="testValTextBox_KeyDown"
                                                Style="{StaticResource customTextbox}"
                                                Text="{Binding LeakageTestFailureCriteriaTestValue, StringFormat={}{0:F2}, UpdateSourceTrigger=PropertyChanged}"
                                                TextChanged="testValTextBox_TextChanged" />
                                            <TextBlock Margin="15,0,10,0" Text="{Binding VacuumUnitTitle}" />
                                        </StackPanel>
                                        <StackPanel
                                            Margin="5,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal">
                                            <TextBlock
                                                Width="140"
                                                VerticalAlignment="Center"
                                                Text="Manual Time" />
                                            <TextBox
                                                x:Name="manualTimeTextBox"
                                                Margin="5,0,0,0"
                                                IsEnabled="{Binding IsCriteriaManTimeBtnEnabled}"
                                                KeyDown="manualTimeTextBox_KeyDown"
                                                Style="{StaticResource customTextbox}"
                                                Text="{Binding LeakageTestFailureCriteriaSetTimeValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                TextChanged="manualTimeTextBox_TextChanged" />
                                            <TextBlock Margin="15,0,10,0" Text="{Binding IntegrityCheckTimeFormatTitle}" />
                                        </StackPanel>
                                        <!--#endregion-->
                                        <StackPanel
                                            Margin="0,0,0,10"
                                            Orientation="Horizontal"
                                            Visibility="Hidden">
                                            <TextBlock
                                                Width="140"
                                                Margin="5,0,0,0"
                                                Text="Preset Time" />
                                            <RadioButton
                                                x:Name="preset1MRadioBtn"
                                                MinWidth="50"
                                                Margin="5,0,0,0"
                                                Checked="preset1MRadioBtn_Checked"
                                                Content="1M"
                                                FontSize="17"
                                                IsEnabled="{Binding IsCriteriaButtonEnabled}"
                                                Style="{StaticResource GenToggleButton}" />
                                            <RadioButton
                                                x:Name="preset5MRadioBtn"
                                                MinWidth="50"
                                                Margin="15,0,0,0"
                                                Checked="preset5MRadioBtn_Checked"
                                                Content="5M"
                                                FontSize="17"
                                                IsEnabled="{Binding IsCriteriaButtonEnabled}"
                                                Style="{StaticResource GenToggleButton}" />
                                            <RadioButton
                                                x:Name="preset10MRadioBtn"
                                                MinWidth="50"
                                                Margin="15,0,0,0"
                                                Checked="preset10MRadioBtn_Checked"
                                                Content="10M"
                                                FontSize="17"
                                                IsEnabled="{Binding IsCriteriaButtonEnabled}"
                                                Style="{StaticResource GenToggleButton}" />
                                            <RadioButton
                                                x:Name="preset15MRadioBtn"
                                                MinWidth="50"
                                                Margin="15,0,0,0"
                                                Checked="preset15MRadioBtn_Checked"
                                                Content="15M"
                                                FontSize="17"
                                                IsEnabled="{Binding IsCriteriaButtonEnabled}"
                                                Style="{StaticResource GenToggleButton}" />
                                        </StackPanel>
                                        <!--#region Preset Time Section-->

                                    </StackPanel>
                                    <!--#endregion-->
                                </Viewbox>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
                <!--#endregion-->
            </DockPanel>

            <!--#region Leakage Test Info Section-->
            <Border
                Grid.Row="2"
                Margin="0,10,0,0"
                Background="{StaticResource LightGrayColor}"
                BorderBrush="{StaticResource CustomBlackColor}"
                BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.32*" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <!--#region Leakage Test Info Title-->
                    <Border Style="{StaticResource standardHeaderBorder}">
                        <Viewbox>
                            <Label
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="Leakage Test Info"
                                FontSize="25"
                                FontWeight="Bold"
                                Foreground="{StaticResource CustomBlackColor}" />
                        </Viewbox>
                    </Border>
                    <!--#endregion-->

                    <Grid Grid.Row="1">
                        <Viewbox MaxWidth="300" HorizontalAlignment="Left">
                            <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                                <!--#region First Row-->
                                <StackPanel Margin="0,10,0,10" Orientation="Horizontal">
                                    <TextBlock
                                        Margin="15,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="Check Status" />
                                    <TextBox
                                        Margin="10,0,0,0"
                                        IsReadOnly="True"
                                        Text="{Binding LeakageTestInfoCheckStatusText}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="MinWidth" Value="175" />
                                                <Setter Property="MinHeight" Value="35" />
                                                <Setter Property="FontSize" Value="21" />
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Cursor" Value="Arrow" />
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                            <GradientStop Offset="0" Color="#88F000" />
                                                            <!--  Green  -->
                                                            <GradientStop Offset="0" Color="#FaFaFa" />
                                                            <!--  GeneralWhite color  -->
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="PASS">
                                                        <Setter Property="Foreground">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                    <GradientStop Offset="0" Color="#FaFaFa" />
                                                                    <GradientStop Offset="0" Color="#FaFaFa" />
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" Value="{StaticResource TechnicalGreenColor}" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="SKIPPED">
                                                        <Setter Property="Foreground" Value="{StaticResource GeneralWhite}" />
                                                        <Setter Property="Background" Value="{StaticResource CustomYellowColorDark}" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="RUNNING">
                                                        <Setter Property="Background" Value="{StaticResource TechnicalGreenColor}" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="IsEnabled" Value="True" />
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        AccelerationRatio="1"
                                                                        AutoReverse="True"
                                                                        RepeatBehavior="Forever"
                                                                        Storyboard.TargetProperty="Foreground.GradientStops[0].Offset"
                                                                        From="0"
                                                                        To="3.0" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetProperty="Foreground.GradientStops[0].Offset"
                                                                        To="0.05"
                                                                        Duration="0:0:0" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="STOPPED">
                                                        <Setter Property="Foreground">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                    <GradientStop Offset="0" Color="#FaFaFa" />
                                                                    <GradientStop Offset="0" Color="#FaFaFa" />
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" Value="{StaticResource Sensor_Red}" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="FAULT">
                                                        <Setter Property="Foreground">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                    <GradientStop Offset="0" Color="#FaFaFa" />
                                                                    <GradientStop Offset="0" Color="#FaFaFa" />
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" Value="{StaticResource Sensor_Red}" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                                <!--#endregion-->
                                <!--#region Second Row-->
                                <StackPanel Margin="0,5,0,10" Orientation="Horizontal">
                                    <TextBlock
                                        Margin="12,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="Elapsed Time" />
                                    <TextBox
                                        Margin="10,0,0,0"
                                        IsReadOnly="True"
                                        Text="{Binding LeakageTestInfoCheckElapsedWholeTime}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="MinWidth" Value="175" />
                                                <Setter Property="MinHeight" Value="35" />
                                                <Setter Property="FontSize" Value="21" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Foreground" Value="{StaticResource MainBlueColor}" />
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                                <Setter Property="Cursor" Value="Arrow" />
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="00:00">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                                <!--#endregion-->
                            </StackPanel>
                        </Viewbox>
                    </Grid>
                </Grid>
            </Border>
            <!--#endregion-->

            <!--#region Sensor Data Section-->
            <Border
                Grid.Row="3"
                Margin="0,10,0,0"
                Background="{StaticResource LightGrayColor}"
                BorderBrush="{StaticResource CustomBlackColor}"
                BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.29*" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <!--#region Sensor Data Title-->
                    <Border Style="{StaticResource standardHeaderBorder}">
                        <Viewbox>
                            <Label
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="Sensor Data"
                                FontSize="25"
                                FontWeight="Bold"
                                Foreground="{StaticResource CustomBlackColor}" />
                        </Viewbox>
                    </Border>
                    <!--#endregion-->
                    <Grid Grid.Row="1">

                        <Viewbox MaxWidth="400">
                            <StackPanel Orientation="Horizontal">
                                <!--#region Min MON Section-->
                                <StackPanel>
                                    <TextBlock
                                        Margin="5,5,0,10"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="21"
                                        Text="Min MON" />
                                    <TextBox Margin="10,0,0,5" Text="{Binding SensorDataMinMonValue, StringFormat={}{0:F2}}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource readOnlyTb}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="0.00">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBox Margin="10,5,0,0" Text="{Binding SensorDataMinMonTitleValue, StringFormat=MON - {0}}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource readOnlyTb}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="MON - 0">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                                <!--#endregion-->
                                <!--#region Max MON Section-->
                                <StackPanel Margin="20,0,0,10">
                                    <TextBlock
                                        Margin="15,5,0,10"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="21"
                                        Text="Max MON" />
                                    <TextBox Margin="10,0,0,5" Text="{Binding SensorDataMaxMonValue, StringFormat={}{0:F2}}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource readOnlyTb}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="0.00">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBox Margin="10,5,0,0" Text="{Binding SensorDataMaxMonTitleValue, StringFormat=MON - {0}}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource readOnlyTb}" TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="MON - 0">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Foreground" Value="{StaticResource CustomBlackColor}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                                <!--#endregion-->
                            </StackPanel>
                        </Viewbox>
                    </Grid>
                </Grid>
            </Border>
            <!--#endregion-->

            <!--#region Buttons Section-->
            <Border
                Grid.Row="4"
                Grid.RowSpan="2"
                Margin="0,10,0,10"
                Background="{StaticResource LightGrayColor}"
                BorderBrush="{StaticResource CustomBlackColor}"
                BorderThickness="1">
                <Viewbox
                    MaxWidth="220"
                    Margin="20"
                    VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">
                        <dx:SimpleButton
                            Height="40"
                            Margin="0,0,0,10"
                            HorizontalContentAlignment="Left"
                            Command="{Binding StopIntegrityCheckCommand}"
                            Content="Stop"
                            FontSize="13"
                            FontWeight="Medium"
                            Glyph="pack://siteoforigin:,,,/Resources/runoperation_stop.png"
                            GlyphHeight="28"
                            GlyphWidth="28"
                            Tag="{Binding Permissions[stop], Converter={StaticResource BoolToPermissionTagValue}}">
                            <dx:SimpleButton.IsEnabled>
                                <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                    <Binding Path="IsStopBtnEnabled" />
                                    <Binding Path="Permissions[stop]" />
                                </MultiBinding>
                            </dx:SimpleButton.IsEnabled>
                            <dx:SimpleButton.Style>
                                <Style TargetType="{x:Type dx:SimpleButton}">
                                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="Tag" Value="PermissionRejected">
                                            <Setter Property="ToolTip" Value="{Binding DisabledControlTooltipText}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </dx:SimpleButton.Style>
                        </dx:SimpleButton>

                        <dx:SimpleButton
                            Height="40"
                            Margin="0,0,0,10"
                            HorizontalContentAlignment="Left"
                            Command="{Binding ResetIntegrityCheckCommand}"
                            Content="Reset Last Check"
                            FontSize="13"
                            FontWeight="Medium"
                            Glyph="pack://siteoforigin:,,,/Resources/reset_32px.png"
                            GlyphHeight="28"
                            GlyphWidth="28"
                            Tag="{Binding Permissions[reset], Converter={StaticResource BoolToPermissionTagValue}}">
                            <dx:SimpleButton.IsEnabled>
                                <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                    <Binding Path="IsResetBtnEnabled" />
                                    <Binding Path="Permissions[reset]" />
                                </MultiBinding>
                            </dx:SimpleButton.IsEnabled>
                            <dx:SimpleButton.Style>
                                <Style TargetType="{x:Type dx:SimpleButton}">
                                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="Tag" Value="PermissionRejected">
                                            <Setter Property="ToolTip" Value="{Binding DisabledControlTooltipText}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </dx:SimpleButton.Style>
                        </dx:SimpleButton>

                        <dx:SimpleButton
                            Height="40"
                            Margin="0,0,0,10"
                            HorizontalContentAlignment="Left"
                            Command="{Binding StartIntegrityCheckCommand}"
                            Content="Start Check"
                            FontSize="13"
                            FontWeight="Medium"
                            Glyph="pack://siteoforigin:,,,/Resources/runoperation_run.png"
                            GlyphHeight="28"
                            GlyphWidth="28"
                            IsEnabled="{Binding IsStartBtnEnabled}">
                            <dx:SimpleButton.Style>
                                <Style TargetType="{x:Type dx:SimpleButton}">
                                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SkipCommandValue}" Value="True">
                                            <Setter Property="ToolTip" Value="Check skipped! (Check skip edildi!)" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </dx:SimpleButton.Style>
                        </dx:SimpleButton>

                        <dx:SimpleButton
                            Height="40"
                            Margin="0,0,0,10"
                            HorizontalContentAlignment="Left"
                            Command="{Binding SkipCommand}"
                            Content="Skip"
                            FontSize="13"
                            FontWeight="Medium"
                            Glyph="pack://siteoforigin:,,,/Resources/skip_32px.png"
                            GlyphHeight="28"
                            GlyphWidth="28"
                            IsEnabled="{Binding IsSkipBtnEnabled}">
                            <dx:SimpleButton.Style>
                                <Style TargetType="{x:Type dx:SimpleButton}">
                                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SkipCommandValue}" Value="True">
                                            <Setter Property="ToolTip" Value="Check skipped! (Check skip edildi!)" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </dx:SimpleButton.Style>
                        </dx:SimpleButton>

                        <dx:SimpleButton
                            Height="40"
                            Margin="0,0,0,10"
                            HorizontalContentAlignment="Left"
                            Command="{Binding ViewReportsCommand}"
                            Content="View Report"
                            FontSize="13"
                            FontWeight="Medium"
                            Glyph="pack://siteoforigin:,,,/Resources/view_report_32px.png"
                            GlyphHeight="28"
                            GlyphWidth="28"
                            IsEnabled="{Binding IsViewReportsBtnEnabled}" />
                    </StackPanel>
                </Viewbox>
            </Border>
            <!--#endregion-->

            <!--#region MON-PTC Data Grid Tables-->
            <UniformGrid
                Grid.RowSpan="5"
                Grid.Column="1"
                Margin="10,0,20,5"
                Columns="1">

                <!--#region MON Ports-->
                <DataGrid
                    x:Name="integrityCheckTable"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    BorderThickness="1,0,0,1"
                    CanUserAddRows="False"
                    CanUserReorderColumns="False"
                    CanUserSortColumns="False"
                    HeadersVisibility="Column"
                    HorizontalGridLinesBrush="{StaticResource RowColorLight}"
                    IsReadOnly="True"
                    ItemsSource="{Binding IntegrityCheckItemsFiltered }"
                    RowHeight="24"
                    SelectionMode="Extended"
                    VerticalGridLinesBrush="{StaticResource RowColorLight}">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding ActualName, UpdateSourceTrigger=PropertyChanged}"
                            Header="Actual Name" />
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding Actual}" 
                            Header="Actual" />
                        <!--StringFormat={}{0:F2}-->
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding Start}"
                            Header="Start" />
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding Finish}"
                            Header="Finish" />
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding Deviation}"
                            Header="Deviation" />
                    </DataGrid.Columns>
                    <DataGrid.CellStyle>
                        <Style BasedOn="{StaticResource CannotFocusableDataGridCell}" TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsItSelected}" Value="True">
                                    <Setter Property="Background" Value="{StaticResource Sensor_Gray}" />
                                    <Setter Property="Foreground" Value="{StaticResource GeneralWhite}" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                </DataGrid>
                <!--#endregion-->

                <!--#region PTC Ports-->
                <DataGrid
                    Margin="0,5,0,0"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    BorderThickness="1,1,0,1"
                    CanUserAddRows="False"
                    CanUserReorderColumns="False"
                    CanUserSortColumns="False"
                    HeadersVisibility="Column"
                    HorizontalGridLinesBrush="{StaticResource RowColorLight}"
                    IsReadOnly="True"
                    ItemsSource="{Binding IntegrityCheckPtcItemsFiltered}"
                    RowHeight="24"
                    SelectionMode="Extended"
                    VerticalGridLinesBrush="{StaticResource RowColorLight}">
                    <DataGrid.RenderTransform>
                        <TranslateTransform Y="500" />
                    </DataGrid.RenderTransform>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding ActualName, UpdateSourceTrigger=PropertyChanged}"
                            Header="Actual Name" />
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding Actual,UpdateSourceTrigger=PropertyChanged ,StringFormat={}{0:F2}}"
                            Header="Actual" />
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding Start, UpdateSourceTrigger=PropertyChanged,StringFormat={}{0:F2}}"
                            Header="Start" />
                        <DataGridTextColumn
                            Width="1*"
                            Binding="{Binding Finish, UpdateSourceTrigger=PropertyChanged,StringFormat={}{0:F2}}"
                            Header="Finish" />
                    </DataGrid.Columns>
                    <DataGrid.CellStyle>
                        <Style BasedOn="{StaticResource CannotFocusableDataGridCell}" TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsItSelected}" Value="True">
                                    <Setter Property="Background" Value="{StaticResource Sensor_Gray}" />
                                    <Setter Property="Foreground" Value="{StaticResource GeneralWhite}" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Style>
                        <Style TargetType="{x:Type DataGrid}">
                            <Setter Property="Opacity" Value="0" />
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPTCPortsGridVisible}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="Opacity"
                                                    From="0"
                                                    To="1"
                                                    Duration="0:0:0.8" />
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                    To="0"
                                                    Duration="0:0:0.45" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                    To="500"
                                                    Duration="0:0:0.45" />
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="Opacity"
                                                    From="1"
                                                    To="0"
                                                    Duration="0:0:0.8" />
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                </DataGrid>
                <!--#endregion-->
            </UniformGrid>

            <!--#endregion-->

            <!--#region Filter Section-->
            <!--  Filter section  -->
            <Viewbox
                Grid.Row="5"
                Grid.Column="1"
                HorizontalAlignment="Left">
                <Border
                    Margin="10,0,0,10"
                    Padding="4"
                    Background="{StaticResource LightGrayColor}"
                    BorderBrush="{StaticResource CustomPassiveBlackColor}"
                    BorderThickness="1">
                    <StackPanel x:Name="filterSp" Orientation="Horizontal">
                        <Label
                            Content="Filter By:"
                            FontSize="15"
                            FontWeight="SemiBold" />
                        <StackPanel Margin="5,6,0,0" Orientation="Horizontal">
                            <RadioButton
                                x:Name="activeItemsRadioBtn"
                                Checked="activeItemsRadioBtn_Checked"
                                Content="Active Items"
                                FontSize="13"
                                Style="{StaticResource generalRadioBtn}" />
                            <RadioButton
                                x:Name="allItemsRadioBtn"
                                Margin="6,0,0,0"
                                Checked="allItemsRadioBtn_Checked"
                                Content="All Items"
                                FontSize="13"
                                IsChecked="True"
                                Style="{StaticResource generalRadioBtn}" />
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Viewbox>

            <!--  Show PTC Ports Button  -->
            <Button
                x:Name="showPtcBtn"
                Grid.Row="5"
                Grid.Column="1"
                Margin="10,0,0,10"
                HorizontalAlignment="Center"
                Click="showPtcBtn_Click"
                Content="Show PTC Ports"
                Style="{StaticResource ptcPortsVisibilityBtn_show}">
                <Button.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform Y="0" />
                        <ScaleTransform CenterX="50" CenterY="50" ScaleX="1" ScaleY="1" />
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <!--#endregion-->

            <!--  Hide PTC Ports Button  -->
            <Button
                x:Name="hidePtcBtn"
                Grid.Row="5"
                Grid.Column="1"
                Margin="10,0,0,10"
                HorizontalAlignment="Center"
                Click="hidePtcBtn_Click"
                Content="Hide PTC Ports"
                Style="{StaticResource ptcPortsVisibilityBtn_hide}">
                <Button.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform Y="50" />
                        <ScaleTransform CenterX="50" CenterY="50" ScaleX="1" ScaleY="1" />
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <!--#endregion-->
        </Grid>
    </Grid>
</UserControl>